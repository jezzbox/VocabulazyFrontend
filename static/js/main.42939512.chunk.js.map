{"version":3,"sources":["components/Header/SecondaryNavbar.js","components/Header/vocabulazy-logo.svg","components/Header/Header.js","components/LoginButton.js","components/Welcome.js","components/Button.js","components/Flashcard.js","Constants/WORD_TYPES.js","Actions/FetchData.js","Actions/ProcessFlashcards.js","Constants/DEFAULT_DECK_SETTINGS.js","Actions/GenerateParameterUrl.js","Actions/ProcessCard.js","components/Flashcards.js","components/DeckSection/CurrentDeck.js","components/Table.js","Actions/AddFlashcards.js","components/DeckSection/AddCards.js","Actions/DeleteCard.js","components/DeckSection/DeckForm.js","components/DeckSection/DeckSettings.js","components/DeckSection/DeckSection.js","Actions/UseFetch.js","components/ChangeUserSettings.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["SecondaryNavbar","isAuthenticated","isLoading","logout","useAuth0","className","to","onClick","returnTo","window","location","origin","Header","src","logo","alt","defaultProps","title","LoginButton","loginWithRedirect","Welcome","Button","text","Flashcard","flashcard","showVerb","setShowVerb","minutes","Math","floor","startTime","timeString","spanishPhrase","wordFromPhrase","englishPhrase","word","wordType","conjugationTense","conjugationForm","conjugationType","showTitle","seasonNumber","episodeNumber","WORD_TYPES","verb","id","adjective","adverb","noun","preposition","pronoun","conjunction","article","fetchData","url","a","method","bodyData","baseUrl","fetch","res","json","dataFromServer","error","headers","body","JSON","stringify","processFlashcards","deck","flashcards","h","flashcardType","length","flashcardId","phase","learningStep","dueDate","lapseCount","isSuspended","ease","interval","processedCard","push","DEFAULT_DECK_SETTINGS","name","useSubjunctive","useInfinitive","useIndicative","useImperative","useParticiple","usePreterite","useImperfect","useFuture","usePresent","useYo","useTu","useEl","useVos","useEllos","useNosotros","useVosotros","generateParameterUrl","currentDeck","parameterUrl","Object","entries","key","value","slice","processCard","buttonClicked","intervalModifier","learningSteps","graduatingInterval","easyInterval","easyBonus","getNewDueDate","currentTime","Date","setMinutes","getMinutes","toJSON","newLearningStep","newEase","newInterval","newLapseCount","newIsSuspended","Number","isInteger","nextDue","find","step","stepNumber","stepInterval","newDueDate","newPhase","processAgainCard","console","log","easeToAdd","easyBonusModifier","easeModifier","processGraduatedCard","increment","processLearningCard","Flashcards","setCurrentDeck","userProfile","useState","isFinished","setIsFinished","setFlashcards","setFlashcard","todaysCards","setTodaysCards","flashcardNumber","setFlashcardNumber","setLearningSteps","learnAheadTime","setLearnAheadTime","useEffect","i","learningStepsString","steps","split","parseInt","getCutoff","customTime","dateTo","setHours","getHours","setDate","getDate","filterCards","cards","cardType","cardLimit","filteredCards","filter","card","reviewCards","reviewsPerDay","learningCards","newCards","newCardsPerDay","todaysCardsFromServer","deckId","currentFlashcard","assign","parameters","phraseFromServer","random","phrase","phraseNumber","endTime","subtitleId","getFlashcard","getPatchData","updateData","patchData","onClickButton","options","updatedCard","updatedDeck","CurrentDeck","Table","columns","data","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","TableHead","map","headerGroup","TableRow","getHeaderGroupProps","column","TableCell","getHeaderProps","render","TableBody","row","getRowProps","cells","cell","getCellProps","addFlashcards","cardsToAdd","startingEase","idKey","event","jsonDate","addData","Phase","AddCards","setShowAddCards","newDeck","searchString","setSearchString","searchResult","setSearchResult","setCardsToAdd","currentCards","setCurrentCards","onSubmitSearch","e","preventDefault","alert","cardState","arrayToCheck","some","onClickSubmit","clickYes","confirmAlert","message","buttons","label","searchResultsColumns","accessor","Cell","values","cardsToAddColumns","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onSubmit","type","placeholder","onChange","target","color","deleteCard","DeckForm","initialDeckSettings","processDeck","isDefault","setName","setUseSubjunctive","setUseIndicative","setUseImperative","setUseParticiple","setUsePreterite","setUseImperfect","setUseFuture","setUsePresent","isDefaultDeck","setIsDefaultDeck","setUseInfinitive","setUseYo","setUseTu","setUseEl","setUseVos","setUseEllos","setUseNosotros","setUseVosotros","checked","currentTarget","DeckSettings","updateDeck","defaultDeckId","cardsInDeck","setCardsInDeck","filterString","setFilterString","showAddCards","currentFlashcards","onClickSuspend","changeCardSuspension","objIndex","findIndex","onClickRemove","CurrentFlashcardsColumns","original","toDateString","toLowerCase","headerText","DeckSection","decks","setDecks","setUpdatedUserProfile","userId","path","exact","useFetch","updatedData","resource","isPending","setIsPending","setData","setError","user","authIdentifier","sub","status","getData","ChangeUserSettings","displayName","setDisplayName","undefined","setDefaultDeckId","setNewCardsPerDay","setGraduatingInterval","setEasyInterval","setStartingEase","setSteps","setReviewsPerDay","setEasyBonus","setIntervalModifier","maximumInterval","setMaximumInterval","updatedUser","Footer","About","href","App","updatedUserProfile","getDefaultDeck","useCallback","defaultDeck","newestDeck","reduce","l","newCurrentDeck","addDeck","deckToAdd","deleteDeck","newDecks","changeCurrentDeck","onClickDeleteDeck","decksColumns","fillRule","clipRule","activeClassName","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.42939512.chunk.js","sourcesContent":["import './navbar.css'\nimport { Link } from 'react-router-dom'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nconst SecondaryNavbar = ({ isAuthenticated, isLoading }) => {\n    const { logout } = useAuth0();\n    return (\n\n     <nav className=\" border-terraCotta-500 border-2 m-4 flex justify-end items-end p-2  rounded-full\">\n        <Link className=\" text-xl hover:text-viola-600\" to=\"/about\">About</Link>\n        {isLoading ||!isAuthenticated ?\n        <>\n            <Link className=\" ml-5 text-xl hover:text-viola-600\" to=\"/\">Log in</Link>\n            <Link className=\" ml-5 text-xl hover:text-viola-600\" to=\"/\">Sign up</Link>\n        </> :\n        <button className=\" ml-5 text-xl hover:text-viola-600\" onClick={() => logout({ returnTo: window.location.origin })}>Log out</button>}\n     </nav>\n    )\n};\n\nexport default SecondaryNavbar\n","export default __webpack_public_path__ + \"static/media/vocabulazy-logo.49aec4d6.svg\";","import PropTypes from 'prop-types'\nimport SecondaryNavbar from './SecondaryNavbar'\nimport logo from './vocabulazy-logo.svg'\n\nconst Header = ({isAuthenticated, isLoading}) => {\n\n\n    return (\n        <header className=\"flex flex-wrap justify-center sm:justify-between h-78 md:h-20 border-b-2 border-bookBlue \">\n            <div className=\"flex items-center h-20\">\n                <div>\n                    <img className=\"object-contain p-2 h-20\" src={logo} alt = \"logo\"/>\n                </div>\n                <h1 className=\"text-center text-terraCotta-600 text-5xl p-2\">VocabuLazy</h1>\n            </div>\n            <SecondaryNavbar isAuthenticated={isAuthenticated} isLoading = {isLoading} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Vocabulazy'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n//CSS IN JS\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = ({className}) => {\n  const { loginWithRedirect } = useAuth0();\n\n  return <button className={className} onClick={() => loginWithRedirect()}>Log In / Sign up</button>;\n};\n\nexport default LoginButton;","import React from \"react\";\nimport LoginButton from './LoginButton'\nimport { Link } from 'react-router-dom'\n\nconst Welcome = () => {\n\n\n    return (\n        <article className=\"flex flex-col items-center\">\n          <p className=\"text-red-500 font-semibold text-2xl p-2\">Please Note: This is a beta release (v0.1), you are likely to find bugs and issues. please report these to support@vocabulazy.net.</p>\n          <header className=\"flex justify-center p-6\">\n            <h1 className=\"text-center text-5xl\">Welcome to VocabuLazy!</h1>\n          </header>\n          <>\n          <div className=\"flex flex-col items-center p-6\">\n            <p className=\"text-xl\">VocabuLazy is a flashcard app based on Anki specifically for Spanish vocabulary.</p>\n          </div>\n          \n          <div className=\"flex justify-center\">\n            <LoginButton className=\"btn border-2 shadow-md border-terraCotta-500 hover:bg-terraCotta-400 hover:shadow-inner ml-2\" />\n            <Link className=\"btn border-2 shadow-md border-terraCotta-500 hover:bg-terraCotta-400 hover:shadow-inner ml-2\" to=\"/About\">About</Link>\n          </div>\n          </>\n        </article>\n        );\n};\n\nexport default Welcome;\n","import PropTypes from 'prop-types'\nconst Button = ({ text, onClick, className }) => {\n    return <button\n        onClick={onClick}\n        className={className}>{text}</button>\n}\n\nButton.defaultProps = {\n    className: 'btn'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    className: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import Button from '../components/Button'\nconst Flashcard = ({ flashcard, showVerb,setShowVerb }) => {\n\n    const minutes = Math.floor(flashcard.startTime / 6000)\n    const seconds = Math.floor((flashcard.startTime / 100) - minutes * 60)\n    const timeString = minutes + ':' + seconds\n    return (\n        <>\n            <div className = \"card\">\n                <h1 className=\"text-4xl\">{flashcard.spanishPhrase}</h1>\n                <h1 className=\"text-2xl\"><em><strong>({flashcard.wordFromPhrase})</strong></em></h1>\n            </div>\n\n            <div className = {!showVerb ? \"card text-xl bg-gray-300\" : \"card text-2xl bg-white\"}>\n            {showVerb ?\n             <>\n                <h2 className=\"text-2xl\">... {flashcard.englishPhrase} ...</h2>\n                    <h2 className=\"text-lg\">{flashcard.word}</h2>\n                    {flashcard.wordType === 'verb' && <> \n                        <h2 className=\"text-lg\">{flashcard.conjugationTense} {flashcard.conjugationForm} {flashcard.conjugationType}</h2>\n                    </>}\n                <h2 className=\"text-lg italic\">{flashcard.showTitle} - Season {flashcard.seasonNumber}, episode {flashcard.episodeNumber}, {timeString} (mm:ss)</h2>\n            </>\n            : <Button text=\"Show\" onClick={() => setShowVerb(!showVerb)} />}\n            </div>\n        </>\n    )\n}\n\nexport default Flashcard\n","const WORD_TYPES = {\n    verb: { id: \"verbId\", flashcard: \"verbFlashcards\" , wordType:\"verb\" },\n    adjective: { id: \"adjectiveId\", flashcard: \"adjectiveFlashcards\",wordType:\"adjective\" },\n    adverb: { id: \"adverbId\", flashcard: \"adverbFlashcards\",wordType:\"adverb\" },\n    noun: { id: \"nounId\", flashcard: \"nounFlashcards\",wordType:\"noun\" },\n    preposition: { id: \"prepositionId\", flashcard: \"prepositionFlashcards\",wordType:\"preposition\" },\n    pronoun: { id: \"pronounId\", flashcard: \"pronounFlashcards\",wordType:\"pronoun\" },\n    conjunction: { id: \"conjunctionId\", flashcard: \"conjunctionFlashcards\",wordType:\"conjunction\" },\n    article: { id: \"articleId\", flashcard: \"articleFlashcards\",wordType:\"article\" }\n}\n\nexport default WORD_TYPES\n","const fetchData = async (url,method='GET',bodyData=[]) => {\n    try {\n        const baseUrl = `https://api.vocabulazy.net/`\n\n        if(method==='GET') {\n        const res = await fetch(baseUrl + url)\n        const dataFromServer = await res.json()\n        return { dataFromServer, error:null }\n        }\n\n        else if(method==='DELETE') {\n            await fetch(baseUrl + url, {\n                method: 'DELETE',\n            })\n            return { dataFromServer:[], error:null }\n            \n        }\n\n        else {\n            const res = await fetch(baseUrl + url,{\n                        method: method,\n                        headers: {\n                            'Content-type': 'application/json'\n                        },\n                        body: JSON.stringify(bodyData)\n                    })\n            const dataFromServer = await res.json()\n            return { dataFromServer, error:null }\n\n        }\n        \n    } catch (error) {\n        return { dataFromServer:[], error }\n    }\n    \n    //     return dataFromServer;\n\n    // const getData = async () => {\n    //     const res = await fetch(baseUrl+ url)\n    //     const dataFromServer = await res.json()\n    //     return dataFromServer;\n    // }\n\n    // const changeData = async(method=method) => {\n    //     const res = await fetch(baseUrl+ url, {\n    //         method: method,\n    //         headers: {\n    //             'Content-type': 'application/json'\n    //         },\n    //         body: JSON.stringify(body)\n    //     })\n    //     const dataFromServer = await res.json()\n    //     return dataFromServer;\n\n    // }\n\n    // const fetchData = async () => {\n    //     if(url === null) {\n    //         console.log(\"loading ...\")\n    //         setIsPending(false)\n    //         return\n    //     }\n    //     else if (method === 'GET') {\n    //         const dataFromServer = await getData()\n\n    //         if(postOn404 && dataFromServer.status === 404) {\n    //             const dataFromServer = await changeData('POST')\n    //             setData(dataFromServer)\n    //             setIsPending(false)\n    //         }\n    //         else {\n    //             setData(dataFromServer)\n    //             console.log(data)\n    //             console.log(dataFromServer)\n    //             setIsPending(false)\n    //         }\n\n    //     }\n\n    //     else if (method === 'DELETE') {\n    //         await fetch(baseUrl+ url, {\n    //             method: 'DELETE',\n    //         })\n    //         setIsPending(false)\n    //     }\n\n    //     else {\n    //         const dataFromServer = await changeData()\n    //         setData(dataFromServer)\n    //         setIsPending(false)\n    //     }\n}\n\nexport default fetchData;","import WORD_TYPES from '../Constants/WORD_TYPES'\n\nconst processFlashcards = (deck) => {\n    const flashcards = []\n    for (const wordType in WORD_TYPES) {\n      var h;\n      const flashcardType = WORD_TYPES[wordType][\"flashcard\"]\n      const id = WORD_TYPES[wordType]['id']\n      if(deck[flashcardType] === null) {\n        deck[flashcardType] = []\n      }\n      for (h = 0; h < deck[flashcardType].length; h++) {\n        const flashcard = deck[flashcardType][h]\n        const flashcardId = flashcard[\"flashcardId\"]\n        const phase = flashcard[\"phase\"]\n        const learningStep = flashcard[\"learningStep\"]\n        const dueDate = flashcard[\"dueDate\"]\n        const lapseCount = flashcard[\"lapseCount\"]\n        const isSuspended = flashcard[\"isSuspended\"]\n        const ease = flashcard[\"ease\"]\n        const interval = flashcard[\"interval\"]\n\n        const processedCard = { word: flashcard[wordType], wordType: wordType, flashcardId, phase, learningStep, dueDate, lapseCount, isSuspended, ease, interval }\n        processedCard[id] = flashcard[id]\n        flashcards.push(processedCard)\n      }\n  }\n  return flashcards;\n}\n\nexport default processFlashcards\n","const DEFAULT_DECK_SETTINGS = {\n    name: ''\n    , useSubjunctive: true\n    , useInfinitive: true\n    , useIndicative: true\n    , useImperative: true\n    , useParticiple: true\n    , usePreterite: true\n    , useImperfect: true\n    , useFuture: true\n    , usePresent: true\n    , useYo: true\n    , useTu: true\n    , useEl: true\n    , useVos: false\n    , useEllos: true\n    , useNosotros: true\n    , useVosotros: true\n}\n\nexport default DEFAULT_DECK_SETTINGS","import DEFAULT_DECK_SETTINGS from '../Constants/DEFAULT_DECK_SETTINGS'\nconst generateParameterUrl = (currentDeck=DEFAULT_DECK_SETTINGS) => {\n    var parameterUrl = '?'\n    for (let [key, value] of Object.entries(DEFAULT_DECK_SETTINGS)) {\n        if(currentDeck[key] === false) {\n            parameterUrl += `${key}=${value}&`\n        }\n    }\n    parameterUrl = parameterUrl.slice(0,-1)\n    return parameterUrl\n}\n\nexport default generateParameterUrl\n","\nconst processCard = (buttonClicked, flashcard, { intervalModifier = null, learningSteps = null, graduatingInterval = null, easyInterval = null, easyBonus = null }) => {\n\n    const getNewDueDate = (interval) => {\n        const currentTime = new Date()\n        const dueDate = (new Date(currentTime.setMinutes(currentTime.getMinutes() + interval))).toJSON()\n        return dueDate;\n    }\n\n    const processLearningCard = (buttonClicked, flashcard, learningSteps, graduatingInterval, easyInterval) => {\n\n        const increment = buttonClicked === \"Easy\" ? 1 : 0\n\n        //checks if step will graduate card\n        if (flashcard.learningStep + increment < learningSteps.length) {\n\n            const nextDue = learningSteps.find((step) => step.stepNumber === flashcard.learningStep + increment + 1).stepInterval\n            const newLearningStep = flashcard.learningStep + increment + 1\n            const newDueDate = getNewDueDate(nextDue)\n            return { newEase: null, newPhase: \"Learning\", newInterval: null, newLearningStep, newDueDate, newLapseCount: null, newIsSuspended: null }\n\n        }\n        else {\n            var newInterval = graduatingInterval * 24 * 60;\n            if (flashcard.interval > 0) {\n                newInterval = flashcard.interval;\n            }\n            else if (buttonClicked === \"Easy\" && flashcard.learningStep + 1 === learningSteps.length) {\n                newInterval = easyInterval * 24 * 60;\n            }\n\n            const newLearningStep = learningSteps.length\n            const newDueDate = getNewDueDate(newInterval)\n            return { newEase: null, newPhase: \"Graduated\", newInterval, newLearningStep, newDueDate, newLapseCount: null, newIsSuspended: null }\n        }\n    }\n\n    const processGraduatedCard = (buttonClicked, flashcard, intervalModifier, easyBonus) => {\n        console.log(\"processing graduated card: \")\n        console.log(\"button clicked\",buttonClicked)\n        console.log(\"flashcard\",flashcard)\n        console.log(\"intervalModifier\",intervalModifier)\n        console.log(\"easyBonus\",easyBonus)\n\n        const easeToAdd = buttonClicked === \"Easy\" ? 15 : buttonClicked === \"Hard\" ? -15 : 0\n        const newEase = flashcard.ease + easeToAdd\n\n        const easyBonusModifier = easyBonus ? (easyBonus / 100) : 1\n        const easeModifier = buttonClicked === \"Hard\" ? 120 : flashcard.ease\n        const newInterval = (intervalModifier * flashcard.interval * easeModifier * easyBonusModifier) / 10000\n        const newDueDate = getNewDueDate(newInterval)\n\n\n        return { newEase, newPhase: null, newInterval, newLearningStep: null, newDueDate, newLapseCount: null, newIsSuspended: null }\n\n    }\n\n    const processAgainCard = (flashcard, learningSteps) => {\n        var newLearningStep = 1;\n        var newEase = null;\n        var newInterval = null;\n        var newLapseCount = null;\n        var newIsSuspended = null;\n\n        if (flashcard.phase === \"Graduated\") {\n            newLearningStep = 2\n            newEase = flashcard.ease - 20\n            newInterval = 1 * 24 * 60\n            newLapseCount = flashcard.lapseCount + 1\n        }\n        if (newLapseCount === 8 || (newLapseCount > 8 && Number.isInteger((newLapseCount - 8) / 4))) {\n            newIsSuspended = true;\n        }\n\n        const nextDue = learningSteps.find((step) => step.stepNumber === newLearningStep).stepInterval\n        const newDueDate = getNewDueDate(nextDue)\n        return { newEase, newPhase: \"Learning\", newInterval, newLearningStep, newDueDate, newLapseCount, newIsSuspended }\n\n    }\n\n    //logic\n    if (buttonClicked === \"Again\") {\n        return processAgainCard(flashcard, learningSteps)\n    }\n\n    else if (flashcard.phase === \"Graduated\") {\n        return processGraduatedCard(buttonClicked, flashcard, intervalModifier, easyBonus)\n    }\n\n    else {\n        return processLearningCard(buttonClicked, flashcard, learningSteps, graduatingInterval, easyInterval)\n    }\n}\n\nexport default processCard","import React from 'react'\nimport Flashcard from './Flashcard'\nimport Button from './Button'\nimport { useState, useEffect } from 'react'\nimport WORD_TYPES from '../Constants/WORD_TYPES'\nimport { Link } from 'react-router-dom'\nimport fetchData from '../Actions/FetchData'\nimport processFlashcards from '../Actions/ProcessFlashcards'\nimport generateParameterUrl from '../Actions/GenerateParameterUrl'\nimport processCard from '../Actions/ProcessCard'\n\nconst Flashcards = ({ currentDeck, setCurrentDeck, userProfile }) => {\n    const [isFinished, setIsFinished] = useState(false)\n    const [flashcards, setFlashcards] = useState(null)\n    const [showVerb, setShowVerb] = useState(false)\n    const [flashcard, setFlashcard] = useState([])\n    const [todaysCards, setTodaysCards] = useState([])\n    const [flashcardNumber, setFlashcardNumber] = useState(0)\n    const [learningSteps, setLearningSteps] = useState([])\n    const [learnAheadTime, setLearnAheadTime] = useState(null)\n\n    //set flashcards from current deck\n    useEffect(() => {\n        setFlashcards(currentDeck.flashcards)\n    }, [currentDeck.flashcards])\n\n    //get learn ahead time\n    useEffect(() => {\n        const currentTime = new Date()\n        const learnAheadTime = (new Date(currentTime.setMinutes(currentTime.getMinutes() + 20))).toJSON()\n        console.log(learnAheadTime)\n        setLearnAheadTime(learnAheadTime)\n    }, [])\n\n    //get learning steps\n    useEffect(() => {\n        const learningStepsString = userProfile.steps.split(\" \")\n        var i;\n        const learningSteps = []\n        for (i = 0; i < learningStepsString.length; i++) {\n            const learningStep = { stepNumber: i + 1, stepInterval: parseInt(learningStepsString[i]) }\n            learningSteps.push(learningStep)\n        }\n        setLearningSteps(learningSteps)\n    }, [userProfile.steps])\n\n    // get  todays flashcards\n    useEffect(() => {\n        if (flashcards) {\n            const currentTime = new Date()\n\n            const getCutoff = (phase, customTime) => {\n                var dateTo = new Date(currentTime.setMinutes(currentTime.getMinutes() + customTime))\n\n                if (phase === \"Graduated\") {\n                    dateTo = new Date(currentTime.setHours(customTime))\n                    if (currentTime.getHours() >= customTime) {\n                        dateTo = new Date(dateTo.setDate(dateTo.getDate() + 1))\n                    }\n                    dateTo = new Date(dateTo.setMinutes(0))\n                }\n                return dateTo.toJSON()\n            }\n\n            const filterCards = (cards, cardType, customTime, cardLimit = -1) => {\n                const dateTo = customTime ? getCutoff(cardType, customTime) : null\n                const filteredCards = cards.filter((card) =>\n                    card.phase === cardType\n                    && (card.dueDate <= dateTo || dateTo === null)\n                    && card.isSuspended === false)\n                    .slice(0, cardLimit)\n                return filteredCards\n\n            }\n            const reviewCards = filterCards(flashcards, \"Graduated\", 4, userProfile.reviewsPerDay)\n            const learningCards = filterCards(flashcards, \"Learning\", 20)\n            const newCards = filterCards(flashcards, \"New\", reviewCards.length > 0 ? 20 : null, userProfile.newCardsPerDay)\n\n            const todaysCardsFromServer = [...reviewCards, ...learningCards, ...newCards]\n\n            setTodaysCards(todaysCardsFromServer)\n            console.log(\"todayscards are: \")\n            console.log(todaysCardsFromServer)\n\n\n        }\n    }, [userProfile.newCardsPerDay, userProfile.reviewsPerDay, currentDeck.deckId, flashcards, isFinished])\n\n    //get next flashcard\n    useEffect(() => {\n        if (!isFinished && todaysCards.length > 0) {\n            console.log(\"effect was triggered to get flashcard\")\n            console.log(todaysCards)\n\n            const getFlashcard = async (currentFlashcard) => {\n                const flashcard = Object.assign({}, currentFlashcard)\n                flashcard.flashcardId = flashcard[WORD_TYPES[flashcard.wordType][\"id\"]]\n\n                const parameters = generateParameterUrl(currentDeck)\n\n                const url = `${flashcard.wordType}s/${flashcard.flashcardId}/phrases` + parameters\n                const { dataFromServer, error } = await fetchData(url)\n                if (error) {\n                    console.log(error)\n                }\n                else {\n                    const phraseFromServer = dataFromServer[Math.floor(Math.random() * dataFromServer.length)];\n                    if (phraseFromServer == null) {\n                        flashcard.phrase = \"no phrase for this word yet\"\n                        flashcard.phraseNumber = null\n                    }\n                    else {\n                        flashcard.spanishPhrase = phraseFromServer.spanishPhrase\n                        flashcard.englishPhrase = phraseFromServer.englishPhrase\n                        flashcard.phraseNumber = phraseFromServer.phraseNumber\n                        flashcard.wordFromPhrase = phraseFromServer.word\n                        flashcard.startTime = phraseFromServer.startTime\n                        flashcard.endTime = phraseFromServer.endTime\n                        flashcard.subtitleId = phraseFromServer.subtitleId\n                        flashcard.conjugationForm = phraseFromServer.conjugationForm\n                        flashcard.conjugationTense = phraseFromServer.conjugationTense\n                        flashcard.conjugationType = phraseFromServer.conjugationType\n                        flashcard.showTitle = phraseFromServer.showTitle\n                        flashcard.seasonNumber = phraseFromServer.seasonNumber\n                        flashcard.episodeNumber = phraseFromServer.episodeNumber\n                    }\n                    setFlashcard(flashcard)\n                }\n            }\n            getFlashcard(todaysCards[flashcardNumber])\n\n        }\n    }, [currentDeck, todaysCards, flashcardNumber, isFinished])\n\n    const getPatchData = (updateData) => {\n        const patchData = []\n        for (let [key, value] of Object.entries(updateData)) {\n            if (value) {\n                patchData.push({ \"op\": \"replace\", \"path\": `/${key}`, \"value\": value })\n            }\n        }\n        return patchData;\n\n    }\n\n    const onClickButton = async (buttonClicked) => {\n\n        const options = {\n            learningSteps: learningSteps\n            , intervalModifier: userProfile.intervalModifier\n            , graduatingInterval: userProfile.graduatingInterval\n            , easyInterval: userProfile.easyInterval\n            , easyBonus: userProfile.easyBonus\n        }\n        console.log(options)\n        console.log(\"flashcard is\")\n        console.log(flashcard)\n        const { newEase, newPhase, newInterval, newLearningStep, newDueDate, newLapseCount, newIsSuspended } = processCard(buttonClicked, flashcard, options)\n        console.log(\"processed card is:\")\n        console.log({ newEase, newPhase, newInterval, newLearningStep, newDueDate, newLapseCount, newIsSuspended })\n        const updateData = { learningStep: newLearningStep, interval: newInterval, phase: newPhase, ease: newEase, dueDate: newDueDate, lapseCount: newLapseCount, isSuspended: newIsSuspended }\n        const patchData = getPatchData(updateData)\n\n        const url = `flashcards/${flashcard.wordType}s?id=${flashcard.flashcardId}&deckId=${currentDeck.deckId}`\n        const { dataFromServer: updatedCard, error } = await fetchData(url, 'PATCH', patchData)\n        if (error) {\n            console.log(error)\n        }\n        else {\n            const currentPhase = newPhase ? newPhase : flashcard.phase\n\n            if (currentPhase === \"Learning\" && newDueDate < learnAheadTime) {\n                todaysCards.push(updatedCard)\n            }\n            await onClick()\n        }\n    }\n\n    const onClick = async () => {\n        if (todaysCards.length > 0 && flashcardNumber + 1 !== todaysCards.length) {\n            setShowVerb(false)\n            setFlashcardNumber(flashcardNumber + 1)\n        }\n        else {\n            const { dataFromServer: updatedDeck, error } = await fetchData(`decks/${currentDeck.deckId}`)\n            if (error) {\n                console.log(error)\n            }\n            else {\n                updatedDeck.flashcards = processFlashcards(updatedDeck)\n                setCurrentDeck(updatedDeck)\n                setShowVerb(false)\n                setIsFinished(true)\n                setTodaysCards([])\n                setFlashcard([])\n            }\n        }\n    }\n\n    return (\n        <section className=\"border-2 border-bookBlue rounded-md bg-white mx-60 flex flex-col items-center\">\n            {!isFinished && todaysCards.length === 0 && <>\n                <h1 className=\"text-2xl\">No cards left for today, come back tomorrow</h1>\n            </>}\n\n            {!isFinished && flashcard && todaysCards.length > 0 && flashcard.spanishPhrase &&\n                <div>\n                    {<Flashcard flashcard={flashcard} showVerb={showVerb} setShowVerb={setShowVerb} />}\n                    {showVerb &&\n                        <div className=\"m-16 border-2 border-terraCotta-500 bg-white rounded-full flex justify-center p-2 shadow-md\">\n                            <Button text=\"Again\" onClick={() => onClickButton(\"Again\")} />\n                            {flashcard.phase === \"Graduated\" && <Button text=\"Hard\" className=\"btn ml-8\" onClick={() => onClickButton(\"Hard\")} />}\n                            <Button text=\"Good\" className=\"btn ml-8\" onClick={() => onClickButton(\"Good\")} />\n                            <Button text=\"Easy\" className=\"btn ml-8\" onClick={() => onClickButton(\"Easy\")} />\n                        </div>}\n                </div>}\n            {isFinished &&\n                <div>\n                    <h1 className=\"text-4xl\">Deck finished!</h1>\n                    <h2 className=\"text-2xl\">Come back tomorrow for more flashcards</h2>\n                </div>}\n                <div>\n                    <Link to=\"/home\" className=\"btn\">Back</Link>\n                </div>\n            \n        </section>\n    )\n}\n\nexport default Flashcards\n","const CurrentDeck = ({ currentDeck }) => {\n\n    return (\n            currentDeck.flashcards &&\n            <div className=\"m-5 w-1/3 rounded-lg shadow-lg bg-white border-2 \">\n                    <header className=\"flex justify-center p-4\">\n                        <h2 className=\"text-5xl \">{currentDeck.name}</h2>\n                    </header>\n\n                <div className=\"flex justify-evenly p-4\">\n                <div>\n                    <h4 className=\"text-3xl\">Cards</h4>\n                    <h4 className=\"text-xl text-terraCotta-500 text-center\">{currentDeck.flashcards.length}</h4>\n                </div>\n                <div>\n                    <h4 className=\"text-3xl\">Due</h4>\n                    <h4 className=\"text-xl text-terraCotta-500 text-center\">{currentDeck.flashcards.filter((flashcard) => flashcard.dueDate < new Date().toJSON() && flashcard.isSuspended === true).length}</h4>\n                </div>\n                </div>\n            </div>\n    )\n}\n\nexport default CurrentDeck\n","import { useTable } from 'react-table'\n\nimport MaUTable from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst Table = ({ columns, data }) => {\n\n  const tableInstance = useTable({ columns, data })\n\n  const {\n\n    getTableProps,\n\n    getTableBodyProps,\n\n    headerGroups,\n\n    rows,\n\n    prepareRow,\n\n  } = tableInstance\n\n\n\n  return (\n    <MaUTable {...getTableProps()}>\n\n      <TableHead>\n\n        {// Loop over the header rows\n\n          headerGroups.map(headerGroup => (\n\n            // Apply the header row props\n\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n\n              {// Loop over the headers in each row\n\n                headerGroup.headers.map(column => (\n\n                  // Apply the header cell props\n\n                  <TableCell {...column.getHeaderProps()}>\n\n                    {// Render the header\n\n                      column.render('Header')}\n\n                  </TableCell>\n\n                ))}\n\n            </TableRow>\n\n          ))}\n\n      </TableHead>\n\n      {/* Apply the table body props */}\n\n      <TableBody {...getTableBodyProps()}>\n\n        {// Loop over the table rows\n\n          rows.map(row => {\n\n            // Prepare the row for display\n\n            prepareRow(row)\n\n            return (\n\n              // Apply the row props\n\n              <TableRow {...row.getRowProps()}>\n\n                {// Loop over the rows cells\n\n                  row.cells.map(cell => {\n\n                    // Apply the cell props\n\n                    return (\n\n                      <TableCell {...cell.getCellProps()}>\n\n                        {// Render the cell contents\n\n                          cell.render('Cell')}\n\n                      </TableCell>\n\n                    )\n\n                  })}\n\n              </TableRow>\n\n            )\n\n          })}\n\n      </TableBody>\n\n    </MaUTable>\n  )\n}\n\nexport default Table\n\n\n\n","import fetchData from './FetchData'\n\nconst addFlashcards = async (deckId, cardsToAdd, startingEase) => {\n    const patchData = []\n        for (var i = 0; i < cardsToAdd.length; i++) {\n            const card = cardsToAdd[i]\n            const wordType = card[\"wordType\"]\n            const idKey = [`${wordType}Id`]\n            const event = new Date();\n            const jsonDate = event.toJSON();\n            const addData = { deckId, Phase: \"New\", ease: startingEase, learningStep: 1, interval: 0, dueDate: jsonDate }\n\n            addData[idKey] = card[idKey]\n            patchData.push({ \"op\": \"add\", \"path\": `/${wordType}Flashcards/-`, \"value\": addData })\n        }\n        const { dataFromServer, error } = await fetchData(`decks/${deckId}`, 'PATCH', patchData)\n        return { dataFromServer, error };\n    }\n\nexport default addFlashcards;","\nimport Table from '../Table'\nimport { useState, useEffect } from 'react'\nimport fetchData from '../../Actions/FetchData'\nimport Button from '../Button'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport addFlashcards from '../../Actions/AddFlashcards'\nimport processFlashcards from '../../Actions/ProcessFlashcards'\nconst AddCards = ({currentDeck, setCurrentDeck, setShowAddCards, startingEase, newDeck=false}) => {\n    const [searchString, setSearchString] = useState('');\n    const [searchResult, setSearchResult] = useState([]);\n    const [cardsToAdd, setCardsToAdd] = useState([]);\n    const [currentCards, setCurrentCards] = useState([]);\n\n    useEffect(() => {\n        if(currentDeck.flashcards) {\n            setCurrentCards(currentDeck.flashcards)\n        }\n    },[currentDeck])\n\n    const onClickAdd = (card) => {\n        card[`${card.wordType}Id`] = card.flashcardId\n        card.isSuspended = false\n        setCardsToAdd([...cardsToAdd, card])\n        console.log(cardsToAdd)\n        }\n    \n    const onSubmitSearch = async (e) => {\n        e.preventDefault()\n    \n        setSearchResult([])\n        if (searchString === null | searchString.length === 0) {\n            alert(\"please add a search value\")\n            return\n            }\n\n        const { dataFromServer, error } = await fetchData(`words?word=${searchString}`)\n        if (error) {\n            console.log(error)\n            }\n        else {\n            var i;\n            for(i=0;i<dataFromServer.length;i++) {\n                dataFromServer[i].flashcardId = dataFromServer[i][`${dataFromServer[i].wordType}Id`]\n                }\n                setSearchResult(dataFromServer)\n            }\n        }\n    \n    const cardState = (card,arrayToCheck) => {\n        return arrayToCheck.some(i => i[`${i.wordType}Id`] === card.flashcardId)\n        }\n\n    const onClickSubmit = async () => {\n        const clickYes = async () => {\n            console.log(currentCards)\n            console.log(\"clicked yes\")\n            const { dataFromServer, error } = await addFlashcards(currentDeck.deckId, cardsToAdd, startingEase)\n            if (error) {\n                console.log(error)\n                }\n            else {\n                dataFromServer.flashcards = processFlashcards(dataFromServer)\n                setCurrentDeck(dataFromServer)\n                setShowAddCards(false)\n                // const newDecks = decks.filter((deck) => deck.deckId !== currentDeck.deckId)\n                // setDecks([...newDecks, dataFromServer])\n                // setCurrentDeck(dataFromServer)\n                }\n            }\n    \n            const clickNo = () => {\n                return\n            }\n    \n    \n    \n        confirmAlert({\n            title: 'Confirm',\n            message: 'Add selected cards to deck?',\n            buttons: [\n                    {\n                        label: 'Yes',\n                        onClick: () => clickYes()\n                    },\n                    {\n                        label: 'No',\n                        onClick: () => clickNo()\n                    }\n                ]\n            });\n        }\n\n    const searchResultsColumns =  [\n        {\n          Header: 'Word',\n          accessor: 'word', // accessor is the \"key\" in the data\n        },\n        {\n          Header: 'Type',\n          accessor: 'wordType',\n        },\n        {\n          Header: 'Add',\n          id: `flashcardId`,\n          accessor:'flashcardId',\n          Cell: ({row}) => (\n                <button className=\"w-40 uppercase text-md text-left font-semibold\" onClick={\n                    !cardState(row.values, currentCards) && !cardState(row.values, cardsToAdd) ?\n                    () => onClickAdd(row.values)\n                    : null}>\n              {cardState(row.values, currentCards) ? \"Already in deck\" \n              : cardState(row.values, cardsToAdd)  ? \"Added\"\n              : \"Add\"}\n          </button>)\n        },\n      ]\n\n      const cardsToAddColumns =  [\n        {\n          Header: 'Word',\n          accessor: 'word', // accessor is the \"key\" in the data\n        },\n        {\n          Header: 'Type',\n          accessor: 'wordType',\n        },\n        {\n          Header: 'Add',\n          id: `flashcardId`,\n          accessor:'flashcardId',\n          Cell: ({row}) => (<button className=\"w-20 uppercase text-md text-left font-semibold\" onClick={\n              () => setCardsToAdd(cardsToAdd.filter(i => !(i.wordType === row.values.wordType && i.flashcardId === row.values.flashcardId)))}>\n                Remove\n          </button>)\n        },\n      ]\n\n\n    return (\n        <div className=\"bg-opacity-60 bg-gray-500 fixed inset-0\">\n\n        <div className=\"opacity-100 mx-96 my-32 shadow-xl p-4 border-4 rounded-xl border-bookBlue bg-gray-100\">\n\n            <div className=\"flex justify-between p-4\">\n                <h2 className=\"text-2xl text-terraCotta-600 px-4 border-b border-bookBlue\" >Add cards</h2>\n                <button className=\"btn\" onClick={() => setShowAddCards(false)}>\n                    <svg className=\"block w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                </button>\n            </div>\n\n            <div>\n            <div className=\"mx-16 bg-bookBlue rounded-t-lg\">\n                \n                <form className='flex justify-left px-4 py-2' onSubmit={onSubmitSearch}>\n                    <div className='flex justify-start items-center'>\n                        <input className=\"text-md w-full rounded-full p-2\"\n                        type='text'\n                        placeholder='hablar ...'\n                        value={searchString}\n                        onChange={(e) => setSearchString(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"p-2 flex justify-center\">\n                        <input type='submit' value='Search' className='btn text-md border-2 border-terraCotta-500' />\n                    </div>\n                </form>\n            \n\n        <div className=\"h-48 flex justify-center items-start bg-white scrollbar-thin scrollbar-thumb-bookBlue scrollbar-track-gray-100 overflow-y-scroll border-2 border-bookBlue\">\n            <Table columns={searchResultsColumns} data={searchResult} />\n        </div>\n    </div>\n    <div className=\"mx-16 bg-terraCotta-600 rounded-t-lg mt-12\">\n        <h1 className=\"py-2 px-4 text-white text-xl\">Selected</h1>\n        <div className=\"h-48 flex justify-center items-start bg-white scrollbar-thin scrollbar-thumb-terraCotta-600 scrollbar-track-gray-100 overflow-y-scroll border border-terraCotta-600\">\n            <Table columns={cardsToAddColumns} data={cardsToAdd} />\n        </div>\n        \n    </div>\n    <div className=\"flex justify-center p-4\">\n        <Button className=\"btn border-2 border-terraCotta-500\" text=\"Submit\" color=\"black\" onClick={onClickSubmit} />\n    </div>\n</div>\n</div>\n</div>\n    )\n}\n\nexport default AddCards\n","import fetchData from './FetchData'\n\nconst deleteCard = async (deckId, card) => {\n    console.log(card)\n    const idKey = `${card.wordType}Id`\n\n    const { error } = await fetchData(`Flashcards/${card.wordType}s?id=${card[idKey]}&deckId=${deckId}`, 'DELETE')\n    if(error) {\n        console.log(error)\n        }\n}\n\nexport default deleteCard\n\n","import { useState } from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport initialDeckSettings from '../../Constants/DEFAULT_DECK_SETTINGS'\n\nconst DeckForm = ({ deck=initialDeckSettings\n, processDeck, isDefault}) => {\n  const [name, setName] = useState(deck.name)\n  const [useSubjunctive, setUseSubjunctive] = useState(deck.useSubjunctive)\n  const [useIndicative, setUseIndicative] = useState(deck.useIndicative)\n  const [useImperative, setUseImperative] = useState(deck.useImperative)\n  const [useParticiple, setUseParticiple] = useState(deck.useParticiple)\n  const [usePreterite, setUsePreterite] = useState(deck.usePreterite)\n  const [useImperfect, setUseImperfect] = useState(deck.useImperfect)\n  const [useFuture, setUseFuture] = useState(deck.useFuture)\n  const [usePresent, setUsePresent] = useState(deck.usePresent)\n  const [isDefaultDeck, setIsDefaultDeck] = useState(isDefault)\n  const [useInfinitive, setUseInfinitive] = useState(deck.useInfinitive);\n  const [useYo, setUseYo] = useState(deck.useYo);\n  const [useTu, setUseTu] = useState(deck.useTu);\n  const [useEl, setUseEl] = useState(deck.useEl);\n  const [useVos, setUseVos] = useState(deck.useVos);\n  const [useEllos, setUseEllos] = useState(deck.useEllos);\n  const [useNosotros, setUseNosotros] = useState(deck.useNosotros);\n  const [useVosotros, setUseVosotros] = useState(deck.useVosotros);\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    const clickYes = () => {\n      processDeck({\n        name, useSubjunctive, useInfinitive, useIndicative, useImperative, useParticiple, usePreterite, useImperfect, useFuture, usePresent,\n        useYo, useTu, useEl, useVos, useEllos, useNosotros, useVosotros\n      },isDefaultDeck)\n    }\n\n    const clickNo = () => {\n      return\n    }\n\n    confirmAlert({\n      title: 'Confirm',\n      message: 'Confirm settings?',\n      buttons: [\n        {\n          label: 'Yes',\n          onClick: () => clickYes()\n        },\n        {\n          label: 'No',\n          onClick: () => clickNo()\n        }\n      ]\n    });\n\n  }\n\n\n  return (\n    <>\n      <form className='bg-gray-100' onSubmit={onSubmit}>\n        <fieldset className=\"flex justify-evenly bg-white border-b border-bookBlue p-4 \">\n          <div className='flex flex-col mb-4'>\n            <label className=\"mb-2 font-semibold text-2xl\">Deck name</label>\n            <input className=\"border py-2 px-3\"\n              type='text'\n              placeholder={deck.name ? deck.name : 'My first deck'}\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </div>\n          <div className='flex flex-col mb-4'>\n              <label className=\"mb-4 font-semibold text-2xl\">Default deck</label>\n              <input className=\"form-check-input\"\n                type='checkbox'\n                checked={isDefaultDeck}\n                value={isDefaultDeck}\n                onChange={(e) => setIsDefaultDeck(e.currentTarget.checked)}\n              />\n            </div>\n        </fieldset>\n        <div className=\"flex justify-center\">\n          <h4 className=\"text-3xl p-2\">Verb settings</h4>\n        </div>\n        <p className=\"text-xl p-4\">You can customise the type of verb conjugations you will see below. Make sure that the forms and tenses are compatible (for example if you only tick subjunctive and preterite, nothing will come up as subjunctive has no preterite form).</p>\n        <div className=\"flex justify-around py-4\">\n          <fieldset className=\"form-fieldset w-1/4 shadow-md\">\n            <h1 className=\"font-bold text-2xl  pb-2 text-center\">Forms</h1>\n            <div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Infinitive</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useInfinitive}\n                  value={useInfinitive}\n                  onChange={(e) => setUseInfinitive(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Subjunctive</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useSubjunctive}\n                  value={useSubjunctive}\n                  onChange={(e) => setUseSubjunctive(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Indicative</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useIndicative}\n                  value={useIndicative}\n                  onChange={(e) => setUseIndicative(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Imperative</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useImperative}\n                  value={useImperative}\n                  onChange={(e) => setUseImperative(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Participle</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useParticiple}\n                  value={useParticiple}\n                  onChange={(e) => setUseParticiple(e.currentTarget.checked)}\n                />\n              </div>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-fieldset w-1/4\">\n            <h1 className=\"font-bold text-2xl pb-2 text-center\">Tenses</h1>\n            <div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Preterite</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={usePreterite}\n                  value={usePreterite}\n                  onChange={(e) => setUsePreterite(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Imperfect</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useImperfect}\n                  value={useImperfect}\n                  onChange={(e) => setUseImperfect(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Future</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useFuture}\n                  value={useFuture}\n                  onChange={(e) => setUseFuture(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Present</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={usePresent}\n                  value={usePresent}\n                  onChange={(e) => setUsePresent(e.currentTarget.checked)}\n                />\n              </div>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-fieldset w-1/4\">\n            <h1 className=\"font-bold text-2xl pb-2 text-center\">Conjugations</h1>\n            <div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Yo</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useYo}\n                  value={useYo}\n                  onChange={(e) => setUseYo(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Tú</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useTu}\n                  value={useTu}\n                  onChange={(e) => setUseTu(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Vos</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useVos}\n                  value={useVos}\n                  onChange={(e) => setUseVos(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Él/Ella/Usted</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useEl}\n                  value={useEl}\n                  onChange={(e) => setUseEl(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Ellos/Ellas/Ustedes</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useEllos}\n                  value={useEllos}\n                  onChange={(e) => setUseEllos(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Nosotros/Nosotras</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useNosotros}\n                  value={useNosotros}\n                  onChange={(e) => setUseNosotros(e.currentTarget.checked)}\n                />\n              </div>\n              <div className='form-check'>\n                <label className=\"form-check-label\">Vosotros/Vosotras</label>\n                <input className=\"form-check-input\"\n                  type='checkbox'\n                  checked={useVosotros}\n                  value={useVosotros}\n                  onChange={(e) => setUseVosotros(e.currentTarget.checked)}\n                />\n              </div>\n\n            </div>\n          </fieldset>\n        </div>\n        <div className=\"mt-4 flex justify-center p-2 bg-white border-t border-bookBlue\">\n          <input type='submit' value='Save changes' className='btn border-2 border-terraCotta-500' />\n        </div>\n      </form>\n    </>\n  )\n}\n\nexport default DeckForm\n","import { useState, useEffect } from 'react'\nimport fetchData from '../../Actions/FetchData'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Link } from 'react-router-dom'\nimport Table from '../Table'\nimport AddCards from './AddCards'\nimport deleteCard from '../../Actions/DeleteCard'\nimport DeckForm from './DeckForm'\n\n\nconst DeckSettings = ({ currentDeck, setCurrentDeck, updateDeck, startingEase, defaultDeckId }) => {\n    const [cardsInDeck, setCardsInDeck] = useState(null)\n    const [filterString, setFilterString] = useState('')\n    const [showAddCards, setShowAddCards] = useState(false)\n\n    useEffect(() => {\n        if (currentDeck.flashcards) {\n            const currentFlashcards = [...currentDeck.flashcards]\n            setCardsInDeck(currentFlashcards)\n        }\n\n    }, [currentDeck.flashcards])\n\n\n    const onClickSuspend = async (flashcard) => {\n        \n\n        const changeCardSuspension = async (flashcard) => {\n            const flashcardId = flashcard[`${flashcard.wordType}Id`]\n            const url = `flashcards/${flashcard.wordType}s?id=${flashcardId}&deckId=${currentDeck.deckId}`\n            const patchData = [{ \"op\": \"replace\", \"path\": `/isSuspended`, \"value\": !flashcard.isSuspended }]\n            const { error } = await fetchData(url,'PATCH',patchData)\n            \n            return { error }\n            }\n        \n\n        const clickYes = async () => {\n            changeCardSuspension(flashcard)\n            const objIndex = cardsInDeck.findIndex((card => card.word === flashcard.word && card.wordType === flashcard.wordType));\n            cardsInDeck[objIndex].isSuspended = !cardsInDeck[objIndex].isSuspended\n            console.log(cardsInDeck)\n            setCardsInDeck([...cardsInDeck])\n            }\n\n        const clickNo = () => {\n            return\n        }\n\n        confirmAlert({\n            title: 'Confirm',\n            message: flashcard.isSuspended ? 'Unsuspend card?' : 'Are you sure you want to suspend this card? you can unsuspend it at any time.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => clickYes()\n                },\n                {\n                    label: 'No',\n                    onClick: () => clickNo()\n                }\n            ]\n        });\n    }\n\n    const onClickRemove = async (card) => {\n\n        const clickYes = async () => {\n            deleteCard(currentDeck.deckId, card)\n            setCardsInDeck(cardsInDeck.filter(i => !(i[`${card.wordType}Id`] === card[`${card.wordType}Id`])))\n            \n        }\n\n        const clickNo = () => {\n            return\n        }\n\n        confirmAlert({\n            title: 'Confirm',\n            message: 'Are you sure you want to remove this card? all progress will be lost. this cannot be undone.',\n            buttons: [\n                {\n                    label: 'Yes',\n                    onClick: () => clickYes()\n                },\n                {\n                    label: 'No',\n                    onClick: () => clickNo()\n                }\n            ]\n        });\n\n    }\n\n        const parseDate = (date) => {\n            const newDate = new Date(date)\n            return newDate.toDateString()\n\n        }\n    \n        const CurrentFlashcardsColumns =  [\n            {\n              Header: 'Word',\n              accessor: 'word', // accessor is the \"key\" in the data\n              Cell: ({row, value}) => (<span className={row.original.isSuspended ? \"line-through text-center text-xl p-2\" : \"text-center text-xl p-2\"}>{value}</span>)\n            },\n            {\n              Header: 'Type',\n              accessor: 'wordType',\n            },\n            {\n                Header: 'Phase',\n                accessor: 'phase',\n              },\n              {\n                Header: 'Due',\n                accessor: 'dueDate',\n                Cell: ({value}) => (parseDate(value))\n              },\n            {\n                id: 'suspend',\n                accessor: 'isSuspended',\n                Cell: ({row}) => (<button className={row.original.isSuspended ? \"text-red-700 w-32 uppercase text-lg font-semibold\" : \"w-32 uppercase text-lg font-semibold\"} onClick={!row.original.phase ? null :() => onClickSuspend(row.original)}>\n                    {!row.original.phase ? \"-\" : cardsInDeck.find(card => card.word === row.original.word && card.wordType === row.original.wordType).isSuspended ? \"Suspended\" : \"Suspend\"}</button>)\n              },\n            {\n              id: `flashcardId`,\n              accessor:'flashcardId',\n              Cell: ({row}) => (<button className=\"w-32 uppercase text-lg font-semibold\" onClick={\n                  () => onClickRemove(row.original)}>\n              Remove</button>)\n            },\n          ]\n\n    return (\n        <>\n        <section className=\"border-2 border-bookBlue rounded-md bg-white mx-60\">\n            {showAddCards && <AddCards startingEase={startingEase} cardsInDeck={cardsInDeck} currentDeck={currentDeck} setCurrentDeck={setCurrentDeck} setShowAddCards={setShowAddCards}/>}\n            <header className=\"flex justify-between p-2 mx-8\">\n                <Link className=\"btn border-2 border-terraCotta-500 bg-gray-100\" to=\"/home\">Back</Link>\n                <h4 className=\"p-2 border-b-2 border-bookBlue text-bold text-center text-xl\">Deck: {currentDeck.name}</h4>\n            </header>\n            <div>\n                <div className=\"flex justify-center\">\n\n                {/* Current cards */}\n                    <div className=\"mx-8 w-full bg-bookBlue shadow-xl rounded-md\">\n                        <div className=\"flex justify-between px-6 pt-4\">\n                            <h2 className=\"text-2xl text-white\">Cards</h2>\n                            <button className=\"btn text-white bg-terraCotta-500\" onClick={() => setShowAddCards(true)}><svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\n</svg>Add</button>\n                        </div>\n\n                        <div className='flex justify-start p-2'>\n                            <input className=\"rounded-full p-2 m-2\" type=\"text\" id=\"myInput\" onChange={(e) => setFilterString(e.target.value.toLowerCase())} value={filterString} placeholder=\"Search deck...\">\n                            </input>\n                            <div className=\"p-2 flex justify-center\">\n                                <input type='submit' value='Search' className='btn text-md border-2 border-terraCotta-500' />\n                            </div>\n                        </div>\n                        {currentDeck.flashcards.length === 0 && <h3>Deck is empty</h3>}\n                        <div className=\"h-96 flex justify-center bg-white overflow-scrollborder border-2 border-bookBlue scrollbar-thin scrollbar-thumb-bookBlue scrollbar-track-gray-100 overflow-y-scroll\">\n                            {cardsInDeck && <Table columns={CurrentFlashcardsColumns} data={cardsInDeck} />}\n                            {/* {cardsInDeck && <Table tableData={getTableButtons(cardsInDeck)} headers={[{ columnName: 'word', objectProperty: 'word' }, { columnName: \"Type\", objectProperty: \"wordType\" }, { columnName: \"delete\", objectProperty: \"button\" }]} />} */}\n                        </div>\n                    </div>\n\n                    </div>\n                    <div className=\"flex justify-center my-24 rounded-md\">\n                    <div className=\"mx-8 w-full bg-bookBlue shadow-lg rounded-md\">\n                        <div className=\"flex justify-between px-6 py-4\">\n                            <h2 className=\"text-2xl text-white\">Deck settings</h2>\n                        </div>\n                        <div className=\"bg-white border-2 border-bookBlue rounded-b-md\">\n                            {console.log(defaultDeckId,currentDeck.deckId)}\n                            <DeckForm deck={currentDeck} processDeck={updateDeck} isDefault={defaultDeckId === currentDeck.deckId ? true : false} headerText=\"Edit deck:\"/>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    )\n}\n\nexport default DeckSettings\n","import CurrentDeck from './CurrentDeck'\nimport DeckSettings from './DeckSettings'\nimport processFlashcards from '../../Actions/ProcessFlashcards'\nimport fetchData from '../../Actions/FetchData'\nimport { useEffect } from 'react'\nimport './deck.css'\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\n\nconst DeckSection = ({ currentDeck, decks, setCurrentDeck, setDecks, startingEase, defaultDeckId, setUpdatedUserProfile, userId }) => {\n\n    useEffect(() => {\n        console.log(currentDeck)\n    }, [currentDeck])\n\n    const updateDeck = async (updatedDeck, isDefault) => {\n        if (isDefault === true && currentDeck.deckId !== defaultDeckId) {\n            setUpdatedUserProfile({ defaultDeckId: currentDeck.deckId, userId })\n        }\n        else if (isDefault === false && currentDeck.deckId === defaultDeckId) {\n            setUpdatedUserProfile({ defaultDeckId: null, userId })\n        }\n        const patchData = []\n        for (const [key, value] of Object.entries(updatedDeck)) {\n            patchData.push({ \"op\": \"replace\", \"path\": \"/\" + key, \"value\": value })\n        }\n\n        const { dataFromServer, error } = await fetchData(`decks/${currentDeck.deckId}`, 'PATCH', patchData)\n        if (error) {\n            console.log(error)\n        }\n        else {\n            dataFromServer.flashcards = processFlashcards(dataFromServer)\n            setCurrentDeck(dataFromServer)\n        }\n\n    }\n\n    return (\n        <Router>\n\n            <article>\n\n\n                <Route path=\"/home\" exact>\n                    <header>\n                        <h4 className=\"p-2 border-b-2 border-bookBlue text-bold text-3xl\">Current deck</h4>\n                    </header>\n                    <div className=\"flex justify-center\">\n                        <CurrentDeck currentDeck={currentDeck} />\n                    </div>\n                    <div className=\"flex justify-center text-center text-2xl\">\n                        <div className=\"w-1/3  flex justify-center text-center\">\n                            <Link className=\"btn border-2 shadow-md transition-colors duration-75 border-terraCotta-500 hover:text-white hover:bg-terraCotta-500 hover:shadow-inner\" to=\"/deck/addFlashcards\">Deck settings</Link>\n                        </div>\n                    </div>\n                </Route>\n\n\n                <Route path=\"/deck/addFlashcards\" exact>\n                    {currentDeck.flashcards && <DeckSettings defaultDeckId={defaultDeckId} startingEase={startingEase} updateDeck={updateDeck} currentDeck={currentDeck} setCurrentDeck={setCurrentDeck} decks={decks} setDecks={setDecks} />}\n                </Route>\n\n            </article>\n        </Router>\n    )\n}\n\nexport default DeckSection\n","import { useState, useEffect } from 'react'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport fetchData from './FetchData'\n\nconst useFetch = (url, updatedData, resource) => {\n    const [isPending, setIsPending] = useState(true)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(null)\n    const { user, isAuthenticated } = useAuth0();\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            console.log(\"are we fetching ?\")\n            if (updatedData) {\n                const updateData = async () => {\n                    setIsPending(true)\n                    const patchData = []\n                    for (const [key, value] of Object.entries(updatedData)) {\n                        patchData.push({ \"op\": \"replace\", \"path\": \"/\" + key, \"value\": value })\n                    }\n                    console.log(`${resource}s/`)\n                    const { dataFromServer, error } = await fetchData(`${resource}s/${updatedData[`${resource}Id`]}`, 'PATCH', patchData)\n                    setError(error)\n                    setData(dataFromServer)\n                    setIsPending(false)\n                }\n                updateData()\n            }\n\n\n            else {\n                const getData = async () => {\n                    setIsPending(true)\n                    if (url === `users?authIdentifier=`) {\n                        const authIdentifier = user.sub\n                        //user.sub\n                        console.log(\"here\")\n                        const { dataFromServer, error } = await fetchData(url + authIdentifier);\n                        if (dataFromServer.status === 404) {\n                            const { dataFromServer, error } = await fetchData('users', 'POST', { authIdentifier })\n                            setError(error)\n                            setData(dataFromServer)\n                            setIsPending(false)\n\n                        }\n                        else {\n                            setError(error)\n                            setData(dataFromServer)\n                            setIsPending(false)\n                        }\n\n                    }\n                    else {\n                        const { dataFromServer, error } = await fetchData(url);\n                        setError(error)\n                        setData(dataFromServer)\n                        setIsPending(false)\n                    }\n                }\n                getData()\n            }\n        }\n    }, [url, user, isAuthenticated, updatedData, resource]);\n\n    return { data, isPending, error };\n}\n\nexport default useFetch;","import { useState } from 'react'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Link } from 'react-router-dom'\n\nconst ChangeUserSettings = ({userProfile, setUpdatedUserProfile}) => {\n            const [displayName, setDisplayName] = useState(userProfile.displayName)\n            const [defaultDeckId, setDefaultDeckId] = useState(userProfile.defaultDeckId ? userProfile.defaultDeckId : undefined)\n            const [newCardsPerDay, setNewCardsPerDay] = useState(userProfile.newCardsPerDay)\n            const [graduatingInterval, setGraduatingInterval] = useState(userProfile.graduatingInterval)\n            const [easyInterval, setEasyInterval] = useState(userProfile.easyInterval)\n            const [startingEase, setStartingEase] = useState(userProfile.startingEase)\n            const [steps, setSteps] = useState(userProfile.steps)\n            const [reviewsPerDay, setReviewsPerDay] = useState(userProfile.reviewsPerDay)\n            const [easyBonus, setEasyBonus] = useState(userProfile.easyBonus)\n            const [intervalModifier, setIntervalModifier] = useState(userProfile.intervalModifier);\n            const [maximumInterval, setMaximumInterval] = useState(userProfile.maximumInterval);\n\n            const onSubmit = (e) => {\n              e.preventDefault()\n          \n              const clickYes = () => {\n                const userId = userProfile.userId\n                  const updatedUser = { userId,\n                    displayName, defaultDeckId, newCardsPerDay, graduatingInterval, easyInterval, startingEase, steps, reviewsPerDay, easyBonus, intervalModifier,\n                    maximumInterval\n                }\n                console.log(updatedUser)\n                setUpdatedUserProfile(updatedUser)\n              }\n          \n              const clickNo = () => {\n                return\n              }\n          \n              confirmAlert({\n                title: 'Confirm',\n                message: 'Confirm settings?',\n                buttons: [\n                  {\n                    label: 'Yes',\n                    onClick: () => clickYes()\n                  },\n                  {\n                    label: 'No',\n                    onClick: () => clickNo()\n                  }\n                ]\n              });\n          \n            }\n          \n            return (\n              <>\n              <header>\n                    <h4>Edit user settings:</h4>\n              </header>\n                <form className='add-form' onSubmit={onSubmit}>\n                  <div className=\"flex justify-center p-4 text-lg\">\n                    <p>here you can customize your user settings and deck modifiers (only change these if you know what you're doing)</p>\n                  </div>\n                  \n                  <div className=\"flex justify-evenly\">\n                  <fieldset className=\"form-fieldset\">\n                  <legend className=\"bg-bookBlue py-2 px-4 rounded-full text-white text-center\">User</legend>\n                    <div className='flex flex-col mb-4'>\n                      <label className=\"mb-2  text-2xl\">Display name</label>\n                      <input className=\"border py-2 px-3\"\n                        type='text'\n                        placeholder={displayName ? displayName : ''}\n                        value={displayName ? displayName : ''}\n                        onChange={(e) => setDisplayName(e.target.value)}\n                      />\n                    </div>\n                    <div className='flex flex-col mb-4'>\n                        <label className=\"mb-2  text-2xl\">Default deck</label>\n                        <select className=\"border py-2 px-3\" value={defaultDeckId} onChange={(e) => setDefaultDeckId(e.target.value)}>\n                            {userProfile.decks.map((deck) => (\n                                <option key={deck.deckId} value={deck.deckId}>{deck.name}</option>\n                            ))}\n                        </select>\n                      </div>\n                  </fieldset>\n          <fieldset className=\"form-fieldset\">\n            <legend className=\"bg-bookBlue p-2 rounded-full text-white text-center\">New cards</legend>\n            <div>\n                <div className='flex flex-col mb-4'>\n                <label className=\"mb-2  text-2xl\">Steps</label>\n                <input className=\"border py-2 px-3\"\n                  type='text'\n                  placeholder={steps}\n                  value={steps}\n                  onChange={(e) => setSteps(e.currentTarget.value)}\n                />\n              </div>\n\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2  text-2xl\">Max new cards per day</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  placeholder={newCardsPerDay}\n                  value={newCardsPerDay}\n                  onChange={(e) => setNewCardsPerDay(e.currentTarget.value)}\n                />\n              </div>\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2  text-2xl\">Graduating interval (days)</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={graduatingInterval}\n                  onChange={(e) => setGraduatingInterval(e.currentTarget.value)}\n                />\n              </div>\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2  text-2xl\">Easy interval (days)</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={easyInterval}\n                  onChange={(e) => setEasyInterval(e.currentTarget.value)}\n                />\n              </div>\n\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2  text-2xl\">Starting ease (%)</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={startingEase}\n                  onChange={(e) => setStartingEase(e.currentTarget.value)}\n                />\n              </div>\n            </div>\n          </fieldset>\n          <fieldset className=\"form-fieldset\">\n            <legend className=\"bg-bookBlue p-2 rounded-full text-white text-center\">Review Cards</legend>\n            <div>\n            <div className='flex flex-col mb-4'>\n                <label className=\"mb-2 text-2xl\">Maximum reviews per day</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={reviewsPerDay}\n                  onChange={(e) => setReviewsPerDay(e.currentTarget.value)}\n                />\n              </div>\n\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2 text-2xl\">Easy bonus (%)</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={easyBonus}\n                  onChange={(e) => setEasyBonus(e.currentTarget.value)}\n                />\n              </div>\n\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2 text-2xl\">Interval modifier (%)</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={intervalModifier}\n                  onChange={(e) => setIntervalModifier(e.currentTarget.value)}\n                />\n              </div>\n\n              <div className='flex flex-col mb-4'>\n                <label className=\"mb-2 text-2xl\">Maximum interval</label>\n                <input className=\"border py-2 px-3\"\n                  type='number'\n                  value={maximumInterval}\n                  onChange={(e) => setMaximumInterval(e.currentTarget.value)}\n                />\n              </div>\n              \n            </div>\n          </fieldset>\n        </div>\n\n                  <div className=\"flex justify-center mt-4\">\n                    <Link to=\"/home\" className=\"btn\" >Back</Link>\n                    <input type='submit' value='Save settings' className='btn border border-terraCotta-500' />\n                  </div>\n                </form>\n              </>\n            )\n\n}\n\nexport default ChangeUserSettings\n","import React from 'react'\n\nconst Footer = ({className}) => {\n    return (\n        <footer className={className}>\n            <h1 className=\"text-white text-lg\">Contact: <a>support@vocabulazy.net</a></h1>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst About = () => {\n    return (\n        <article className=\"flex flex-col items-center\">\n            <header className=\"p-2\">\n                <h1 className=\"text-2xl font-semibold text-center\">About</h1>\n            </header>\n            <p className=\"text-xl\">Vocabulazy is a flashcard app based on the same spaced repetition algorithm used by <a className=\"text-blue-400\" href=\"https://apps.ankiweb.net/\">Anki</a>, but built specifically for spanish vocabulary and its verb conjugations.<br />\n                It is not necessary to have used Anki to use this app, however I reccomend you check it out anyway as it's an extremely powerful program for memorization.</p>\n\n            <section className=\"my-8\">\n                <header className=\"p-2\">\n                    <h2 className=\"text-xl font-semibold text-center\">How it works</h2>\n                </header>\n                <p className=\"text-xl\">When creating your deck, you choose from a list of available spanish words as your cards. These cards will then find a spanish phrase based on that word. <br />\n                \n                If the word is a verb, this could include any conjugation of that verb. If it's an adjective it could contain masculine, femenine or plural versions of that word. <br />\n                This allows for your cards to have context and variety without having to do any extra work.</p>\n\n                <p className=\"text-xl text-left my-6\">Phrases are currently taken from popular spanish language series but there are plans to expand this in the future.</p>\n            </section>\n\n            <section className=\"my-8\">\n                <header className=\"p-2\">\n                    <h2 className=\"text-xl font-semibold text-center\">Customization</h2>\n                </header>\n                <p className=\"text-xl text-left\">You can customize the verb conjugations you would like to see, for example you could alter the settings so you only see phrases using the subjunctive. <br />\n                This does, however limit the amount of possible phrases you will see.</p>\n\n                <p className=\"text-xl my-6\">You can also customize settings for the repetition algorithm. It is not reccomended to change these unless you know what you are doing.</p>\n            </section>\n\n            <section className=\"my-8\">\n                <header className=\"p-2\">\n                    <h2 className=\"text-xl font-semibold text-center\">Limitations and Issues</h2>\n                </header>\n                <ul className=\"list-disc\">\n                    <li className=\"p-2 text-lg\">There are no translations of the individual words, only a translation of the phrase you see. This is intentional, words can have many different meanings and only with context can you know what it means. <br />\n                    You should also have an idea of the word before you put it in your deck.</li>\n                    <li className=\"p-2 text-lg\">It is possible that a word you have chosen does not have a phrase yet. You will still see the card however the phrase will be blank. More phrases will be added in the future to prevent this issue</li>\n                    <li className=\"p-2 text-lg\">Some words and conjugations are identical (e.g. 've' can be the imperative tú of the verb 'ir' and also singular yo of 'ver'. The app currently has no way to distinguish these. <br />\n                        There are plans to identify these in future updates, however it is good practice to see these to know all of the possible meanings, and use context to identify which word it is.</li>\n                    <li className=\"p-2 text-lg\">Some english translations may be off. these come directly from english subtitles and the translations are not always </li>\n                </ul>\n                \n            </section>\n\n\n\n            <section className=\"my-8\">\n                <header className=\"p-2\">\n                    <h2 className=\"text-xl font-semibold text-center\">Your data</h2>\n                </header>\n                <p className=\"text-xl text-left\">Logins are handled by Auth0 which you can read about <a className=\"text-blue-400\" href=\"https://auth0.com/security\">here</a>. \n                This app does not store any of your personal information and the login is used only to save your deck, cards and settings.</p>\n            </section>\n\n\n        </article>\n    )\n}\n\nexport default About\n","import { useState, useEffect, useCallback } from 'react'\nimport { BrowserRouter as Router, Route, NavLink, Redirect, Link } from 'react-router-dom'\nimport Header from './components/Header/Header'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Welcome from './components/Welcome'\nimport Flashcards from './components/Flashcards'\nimport DeckSection from './components/DeckSection/DeckSection'\nimport useFetch from './Actions/UseFetch';\nimport processFlashcards from './Actions/ProcessFlashcards'\nimport ChangeUserSettings from './components/ChangeUserSettings';\nimport DeckForm from './components/DeckSection/DeckForm'\nimport fetchData from './Actions/FetchData'\nimport Table from './components/Table'\nimport { confirmAlert } from 'react-confirm-alert'; // Import\nimport AddCards from './components/DeckSection/AddCards'\nimport Footer from './components/Footer'\nimport About from './components/About'\n\nfunction App() {\n  const { isAuthenticated, isLoading } = useAuth0();\n  const [updatedUserProfile, setUpdatedUserProfile] = useState(null)\n  const { data: userProfile, isPending, error } = useFetch(`users?authIdentifier=`, updatedUserProfile, \"user\")\n  const [decks, setDecks] = useState(null)\n  const [currentDeck, setCurrentDeck] = useState(null)\n  const [showAddCards, setShowAddCards] = useState(false)\n\n\n  const getDefaultDeck = useCallback((decks) => {\n    const defaultDeck = decks.find(deck => deck.deckId === userProfile.defaultDeckId)\n\n        if(defaultDeck === undefined) {\n          if(decks.length === 0) {\n            return null\n          }\n          const newestDeck = decks.reduce((l,d) => l.dueDate > d.dueDate ? l : d)\n          newestDeck.flashcards = processFlashcards(newestDeck)\n          return newestDeck;\n        }\n        else {\n           defaultDeck.flashcards = processFlashcards(defaultDeck)\n           return defaultDeck;\n        }\n  },[userProfile.defaultDeckId])\n\n  // sets the decks after userProfile is loaded\n  useEffect(() => {\n    if (userProfile && !isPending && userProfile.decks) {\n        setDecks(userProfile.decks)\n    }\n  }, [userProfile, isPending])\n\n  // sets the default deck after setDecks\n  useEffect(() => {\n    if (userProfile && !isPending && decks) {\n      if (!currentDeck && decks.length > 0) {\n\n        const newCurrentDeck = getDefaultDeck(decks)\n        setCurrentDeck(newCurrentDeck)\n    }\n}\n}, [decks, currentDeck, isPending, userProfile, getDefaultDeck])\n\n\n  useEffect(() => {\n    if (userProfile) {\n      console.log(userProfile)\n      setUpdatedUserProfile(null)\n    }\n  }, [userProfile])\n\n// add new deck\n  const addDeck = async (deckToAdd) => {\n    deckToAdd.userId = userProfile.userId\n    const { dataFromServer: newDeck, error } = await fetchData(`decks/`, 'POST', deckToAdd)\n    if (error) {\n      console.log(error)\n    }\n    else {\n      newDeck.flashcards = []\n      setCurrentDeck(newDeck)\n      setDecks([...decks, newDeck])\n      setShowAddCards(true)\n    }\n\n  }\n\n  // delete deck\n  const deleteDeck = async (deckId) => {\n    const { error } = await fetchData(`decks/${deckId}`, 'DELETE')\n    if (error) {\n      console.log(error)\n    }\n    else {\n      const newDecks = decks.filter((deck) => deck.deckId !== deckId)\n      setDecks(newDecks)\n\n      if(deckId === currentDeck.deckId) {\n        const newCurrentDeck = getDefaultDeck(newDecks)\n        setCurrentDeck(newCurrentDeck)\n      }\n    }\n\n  }\n\n  const changeCurrentDeck = async (deck) => {\n    deck.flashcards = processFlashcards(deck)\n    setCurrentDeck(deck)\n\n  }\n\n  const onClickDeleteDeck = async (deckId) => {\n\n\n    const clickYes = async () => {\n      deleteDeck(deckId)\n      \n    }\n\n    const clickNo = () => {\n      return\n    }\n\n  confirmAlert({\n      title: 'Confirm',\n      message: 'Are you sure you want to delete this deck? all progress will be lost. this cannot be undone.',\n      buttons: [\n          {\n              label: 'Yes',\n              onClick: () => clickYes()\n          },\n          {\n              label: 'No',\n              onClick: () => clickNo()\n          }\n      ]\n  });\n\n}\n\n\n  const decksColumns =  [\n    {\n      id: `currentDeck`,\n      accessor:'deckId',\n      Cell: ({value}) => (<div className=\"w-16 flex justify-left\"> {userProfile.defaultDeckId === value ?\n        <svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"yellow\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\" />\n        </svg> : null }\n        {currentDeck.deckId === value ? <svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-8.707l-3-3a1 1 0 00-1.414 1.414L10.586 9H7a1 1 0 100 2h3.586l-1.293 1.293a1 1 0 101.414 1.414l3-3a1 1 0 000-1.414z\" clipRule=\"evenodd\" />\n        </svg> : null}\n        </div>)\n    },\n    {\n      Header: 'Name',\n      id:'name',\n      Cell: ({row}) => (<button className={currentDeck.deckId === row.original.deckId ? \"font-bold\" : \"\"} onClick={() => changeCurrentDeck(row.original)}>{row.original.name}</button>)\n    },\n\n\n    {\n      Header: 'Cards',\n      id:'cards',\n      accessor: 'flashcards', // accessor is the \"key\" in the data\n      Cell: ({row}) => (<span className=\"text-xl p-2\">{processFlashcards(row.original).length}</span>)\n    },\n    {\n      Header: 'Due',\n      id:'cardsDue',\n      accessor: 'flashcards', // accessor is the \"key\" in the data\n      Cell: ({row}) => (<span onClick={() => console.log(row.original)} className=\"text-xl p-2\">{(processFlashcards(row.original).filter((flashcard) => flashcard.dueDate <= new Date().toJSON())).length}</span>)\n    },\n    \n    {\n      id: 'deleteDeck',\n      accessor:'deckId',\n      Cell: ({value}) => (<button className=\"w-32 uppercase text-lg font-semibold\" onClick={\n        () => onClickDeleteDeck(value)}>\n      Delete</button>)\n    },\n  ]\n  \n  return (\n    <Router>\n      <>\n      {error && console.log(error)}\n        <Header isAuthenticated={isAuthenticated} isLoading={isLoading}/>\n        {!isPending && <nav className=\"border-b-2 border-bookBlue flex justify-evenly p-2 bg-white   text-2xl \">\n            <NavLink className=\"hover:text-viola-600\" activeClassName=\"font-semibold\" to=\"/home\"><svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\n</svg>Home</NavLink>\n            <NavLink className=\"hover:text-viola-600\" activeClassName=\"font-semibold\" to=\"/decks/add\"><svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\n</svg>Create new deck</NavLink>\n            <NavLink className=\"hover:text-viola-600\" activeClassName=\"font-semibold\" to=\"/decks/change\"><svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4\" />\n</svg>Change deck</NavLink>\n            <NavLink className=\"hover:text-viola-600\" activeClassName=\"font-semibold\" to=\"/User/Settings\"><svg className=\"w-6 inline-block\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n  <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n</svg>User settings</NavLink>\n        </nav>}\n\n        <main className='flex-grow px-16 py-6 bg-gray-100'>\n\n          {/* Initial redirects */}\n          {!isLoading ?\n             <Route path=\"/\" exact>\n              <>\n                {!isAuthenticated ? <Redirect to=\"/welcome\" />\n                  : !isPending ? <Redirect to=\"/home\" />\n                  : <button type=\"button\" className=\"bg-rose-600\" disabled><svg className=\"animate-spin h-5 w-5 mr-3\" viewBox=\"0 0 24 24\"></svg>Loading ... </button>}\n              </>\n              </Route>: <button type=\"button\" className=\"bg-rose-600\" disabled><svg className=\"animate-spin h-5 w-5 mr-3\" viewBox=\"0 0 24 24\"></svg>jesus Loading</button>}\n\n            {/* Welcome page */}\n            <Route path=\"/welcome\">\n              <Welcome/>\n            </Route>\n\n            {/* home page */}\n            <Route path=\"/home\">\n              {currentDeck ? <>\n                {showAddCards && <AddCards startingEase={userProfile.startingEase} cardsInDeck={[]} currentDeck={currentDeck} setCurrentDeck={setCurrentDeck} setShowAddCards={setShowAddCards} newDeck={true}/>}\n                <DeckSection setUpdatedUserProfile={setUpdatedUserProfile} userId = {userProfile.userId} defaultDeckId={userProfile.defaultDeckId} currentDeck={currentDeck} decks={decks} setDecks={setDecks} setCurrentDeck={setCurrentDeck} userProfile={userProfile} startingEase={userProfile.startingEase}/>\n                {\n                  <div className=\"flex justify-center text-4xl\">\n                    <div className=\" p-4 w-1/2 flex justify-center text-center\">\n                      <Link className=\"h-12 w-40 btn text-8xl transition-colors duration-150 bg-puertoRico-300 border focus:shadow-outline hover:bg-puertoRico-100\" to =\"/flashcards\">Start</Link>\n                    </div>\n                  </div>}\n              </>: isAuthenticated ? <div className=\"flex justify-center\"><h1 className=\"text-2xl\">No decks, create one to get started!</h1></div> : null}\n            </Route>\n            \n            {/* User settings */}\n            <Route path=\"/User/Settings\">\n              {userProfile && userProfile.decks ? <ChangeUserSettings userProfile={userProfile} setUpdatedUserProfile={setUpdatedUserProfile} /> : null}\n            </Route>\n            \n            {/* Add deck */}\n              {isAuthenticated && userProfile ?\n                <Route path=\"/decks/add\">\n                  <>\n                  <div className=\"m-6 w-full flex justify-center bg-white border-2 border-bookBlue shadow-xl rounded-md\">\n                  <div className=\"border m-4 rounded-md shadow-xl\">\n                    <div className=\"flex justify-between px-6 pt-4 bg-bookBlue rounded-t-lg\">\n                      <h1 className=\"text-center text-2xl text-white\">New</h1>\n                    </div>\n                    <div className=\"border border-bookBlue\">\n                    {!showAddCards ? <DeckForm processDeck={addDeck}/> : <Redirect to=\"/home\" exact/>}\n                    </div>\n                  </div>\n                  </div>\n                  </>\n                </Route>\n                : null\n              }\n\n            {/* Manage decks */}\n            <Route path=\"/decks/change\">\n                <section className=\"border-2 border-bookBlue rounded-md bg-white mx-80\">\n                {decks && currentDeck ? <>\n                <header className=\"flex justify-between p-2 mx-8\">\n                    <Link className=\"btn border-2 border-terraCotta-500 bg-gray-100\" to=\"/home\">Back</Link>\n                </header>\n                <div className=\"flex justify-center\">\n                  <div className=\"m-6 w-3/4 bg-bookBlue shadow-xl rounded-md\">\n                    <div className=\"flex justify-between px-6 pt-4\">\n                        <h2 className=\"text-2xl text-white\">Change deck</h2>\n                    </div>\n                  <div className=\"flex justify-center bg-white overflow-scrollborder border-2 border-bookBlue scrollbar-thin scrollbar-thumb-bookBlue scrollbar-track-gray-100 overflow-y-scroll\">\n                    <Table columns={decksColumns} data={decks} />\n                  </div>\n                  </div>\n                  </div>\n                  </>:<div className=\"flex justify-center\"><h1 className=\"text-lg\">You don't have any decks yet</h1></div>}\n                  </section>\n            </Route>\n\n\n\n            <Route path=\"/Flashcards\">\n                  {currentDeck &&\n                    <>\n                      <Flashcards userProfile={userProfile} currentDeck={currentDeck} setCurrentDeck={setCurrentDeck}/>\n                    </>\n                  }\n\n            </Route>\n            <Route path=\"/About\">\n              <About />\n            </Route>\n            \n\n        </main>\n\n        <Footer className=\"flex justify-center border-t-4 border-white bg-bookBlue p-6\"/>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from \"@auth0/auth0-react\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Auth0Provider\n    domain='dev-hduvcad5.eu.auth0.com'\n    clientId='ydn3VofQC2OxQqkk52ILkJADCWvT3PoA'\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}