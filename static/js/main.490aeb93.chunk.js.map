{"version":3,"sources":["components/LogoutButton.js","components/Header.js","components/LoginButton.js","components/Button.js","components/Welcome.js","components/Navbar/MenuItems.js","components/Navbar/logo.png","components/Navbar/Navbar.js","components/Decks/DeckItem.js","components/Decks/Decks.js","components/Decks/Deck.js","components/Decks/Verb.js","components/Decks/Verbs.js","components/Decks/CurrentVerbs.js","components/Decks/AddVerbs.js","components/Decks/AddDeck.js","components/Flashcard.js","components/Flashcards.js","App.js","reportWebVitals.js","index.js"],"names":["LogoutButton","logout","useAuth0","className","color","onClick","returnTo","window","location","origin","Header","user","title","isAuthenticated","isLoading","name","defaultProps","LoginButton","loginWithRedirect","Button","text","style","backgroundColor","Welcome","MenuItems","id","url","cName","Navbar","toggleNavMenu","onToggleNavMenu","src","logo","alt","map","item","index","href","DeckItem","deck","setCurrentDeck","currentDeck","deckName","Decks","decks","length","deckId","Deck","showFlashcards","showAddVerbs","setShowAddVerbs","verbFlashcards","verbs","Verb","verb","setVerbFlashcards","isCurrent","verbCheck","some","x","verbId","filter","Verbs","filterString","filterResult","match","CurrentVerbs","AddVerbs","updateVerbFlashcards","useState","setFilterString","type","onChange","e","target","value","toLowerCase","placeholder","confirm","AddDeck","deckVerbs","addDeck","userUrl","setDeckName","useSubjunctive","setUseSubjunctive","useIndicative","setUseIndicative","useImperative","setUseImperative","useParticiple","setUseParticiple","usePreterite","setUsePreterite","useImperfect","setUseImperfect","useFuture","setUseFuture","usePresent","setUsePresent","isDefault","setIsDefault","onSubmit","preventDefault","userId","alert","checked","currentTarget","Flashcard","flashcard","showVerb","phrase","Flashcards","isFinished","setIsFinished","hideFlashcards","setShowVerb","setFlashcard","todaysCards","setTodaysCards","flashcardNumber","setFlashcardNumber","useEffect","fetchTodaysFlashcards","cardPhase","a","cutoff","getMaxCardsParameter","dueDate","dueDateString","getDueDateParameter","maxCards","fetch","res","json","data","getCutoff","reviewCardsFromServer","learningCardsFromServer","getNewCards","existReviewCard","newCardsFromServer","todaysCardsFromServer","getTodaysCards","verbFlashcard","fetchPhrase","phraseFromServer","Object","assign","phraseId","getFlashcard","phase","customTime","currentTime","Date","setMinutes","getMinutes","toJSON","setHours","Math","floor","random","onClickAgain","newEase","ease","newDueDate","getNewDueDate","updateData","learningStep","interval","updateVerbFlashcard","verbFlashcardId","updatedCard","push","onClickHard","newInterval","onClickGood","onClickEasy","onClickQuit","patchData","entries","key","method","headers","body","JSON","stringify","App","setToggleNavMenu","showAddDeck","setShowAddDeck","showChangeDeck","setShowChangeDeck","setUserUrl","setDecks","setVerbs","setShowFlashcards","sub","userUrlFromServer","getUserUrl","fetchDecks","DecksFromServer","sort","b","getDecks","fetchVerbs","VerbsFromServer","getVerbs","fetchVerbFlashcards","verbFlashcardsFromServer","getVerbFlashcards","addVerbFlashcard","deleteVerbFlashcard","verbsToAdd","verbsToRemove","forEach","newVerbFlashcard","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.490aeb93.chunk.js","sourcesContent":["import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n  const { logout } = useAuth0();\n\n  return (\n    <button className ='btn btn-secondary' color='steelblue' onClick={() => logout({ returnTo: window.location.origin })}>\n      Log Out\n    </button>\n  );\n};\n\nexport default LogoutButton;","import PropTypes from 'prop-types'\nimport LogoutButton from './LogoutButton'\n\nconst Header = ({ user, title, isAuthenticated, isLoading }) => {\n\n    if (isLoading) {\n        return <div>Loading ...</div>;\n      }\n\n    return (\n        <header className='header'>\n            {isAuthenticated ? <h1>Welcome, {user.name}</h1> : <h1>{title}</h1>}\n            {isAuthenticated && <LogoutButton />}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Vocabulazy'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n//CSS IN JS\n// const headingStyle = {\n//     color: 'red',\n//     backgroundColor: 'black'\n// }\n\nexport default Header\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n  const { loginWithRedirect } = useAuth0();\n\n  return <button className='btn center' onClick={() => loginWithRedirect()}>Log In</button>;\n};\n\nexport default LoginButton;","import PropTypes from 'prop-types'\nconst Button = ({ color,text, onClick }) => {\n    return <button\n     onClick={onClick} \n     style={{backgroundColor: color}} \n     className='btn'>{text}</button>\n}\n\nButton.defaultProps = {\n    color: 'blueviolet'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import React from \"react\";\nimport LoginButton from './LoginButton'\nimport Button from './Button'\n\nconst Welcome = ({ isAuthenticated, isLoading }) => {\n\n\n    return (\n        !isAuthenticated && (\n            <>\n            <div className=\"center\">\n              <p>VocabuLazy is a flashcard app for Spanish vocabulary that automatically finds phrases based on the words you choose.</p>\n            </div>\n            <div className=\"center\">\n              <LoginButton />\n              <Button text=\"Try it out\" />\n            </div>\n            </>\n        )\n\n    );\n};\n\nexport default Welcome;\n","const MenuItems = [\n{\n    id:1,\n    title: 'Home',\n    url: '#',\n    cName: 'nav-links',\n},\n{\n    id:2,\n    title: 'Services',\n    url: '#',\n    cName: 'nav-links',\n},\n{\n    id:3,\n    title: 'Products',\n    url: '#',\n    cName: 'nav-links',\n},\n{\n    id:4,\n    title: 'Contact us',\n    url: '#',\n    cName: 'nav-links',\n},\n{\n    id:5,\n    title: 'Sign up',\n    url: '#',\n    cName: 'nav-links-mobile',\n}\n]\n\nexport default MenuItems","export default __webpack_public_path__ + \"static/media/logo.1783d326.png\";","import MenuItems from './MenuItems'\nimport './navbar.css'\nimport logo from './logo.png'\nconst Navbar = ( { toggleNavMenu, onToggleNavMenu  } ) => {\n    return (\n\n     <nav className=\"NavbarItems\">\n        <h1 className=\"navbar-logo\">VocabuLazy</h1>\n        <img className=\"resize\" src={logo} alt = \"logo\"/>\n        <div className=\"menu-icon\" onClick={onToggleNavMenu}>\n            <i className={toggleNavMenu ? 'fas fa-times' : 'fas fa-bars'}></i>\n        </div>\n        <div className=\"nav-container\">\n        <ul className=\"nav-menu\">\n            {MenuItems.map((item, index) => {\n                return (\n                    <li>\n                        <a key={item.id} className={item.cName} href={item.url} >\n                            {item.title}\n                        </a>\n                    </li>\n                )\n            })}\n        </ul>\n        </div>\n     </nav>\n    )\n};\n\nexport default Navbar\n\n","import Button from '../Button'\n\nconst DeckItem = ( {deck, setCurrentDeck, currentDeck} ) => {\n\nconst onClick = () => {\n    setCurrentDeck(deck)\n\n}\n\n    return (\n        <div className=\"verb-container\">\n        <h3>{deck.deckName}</h3>\n        {currentDeck === deck ? <Button color=\"green\" text=\"Selected\"/>: <Button text=\"Select\" onClick={onClick}/>}\n        </div>\n    )\n}\n\nexport default DeckItem\n","\nimport DeckItem from './DeckItem'\n\nconst Decks = ({ decks ,isLoading, isAuthenticated, setCurrentDeck, currentDeck }) => {\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    isAuthenticated && (\n        <ul>\n          {decks.length > 0 ? (\n            decks.map((deck) => (\n              <DeckItem key={deck.deckId} deck={deck} setCurrentDeck={setCurrentDeck} currentDeck={currentDeck}/>\n            ))) : <li>No decks, create one to get started!</li>}\n        </ul>\n    )\n  );\n};\n\nexport default Decks;","import Button from '../Button'\n\nconst Deck = ({ showFlashcards, showAddVerbs, setShowAddVerbs, setCurrentDeck, verbs, verbFlashcards, deck }) => {\n\n    const onClick = () => {\n        setShowAddVerbs(!showAddVerbs)\n        setCurrentDeck(deck)\n    }\n\n    return (\n            <div className=\"deck-container\">\n                <h3 className=\"deck-title\">{deck.deckName}</h3>\n                <h3> Words: {verbFlashcards.length}</h3>\n                <div>\n                <Button className=\"btn\" color=\"green\" text=\"Start\" onClick={showFlashcards}/>\n                    <Button className=\"btn\" color = \"steelblue\" text={!showAddVerbs ? \"Add/Remove Words\" : \"Back\"} onClick={onClick}/>\n                    <Button className=\"btn\" text=\"Edit settings\"/>\n                </div>\n            \n            </div>\n    )\n}\n\nexport default Deck","import Button from '../Button'\nconst Verb = ({ verb, verbFlashcards, setVerbFlashcards, isCurrent }) => {\n\n    const verbCheck = verbFlashcards.length === 0 ? false : verbFlashcards.some(x => x.verbId === verb.verbId) ? true : false\n\n    const onClick = (isCurrent) => {\n        isCurrent ? setVerbFlashcards(verbFlashcards.filter(x => x.verbId !== verb.verbId)) : setVerbFlashcards([...verbFlashcards,verb])\n    }\n\n    return (\n        <div className=\"verb-container\">\n            <h3>{verb.verb}</h3>\n            <Button text={verbCheck && !isCurrent ? \"Added\" : !isCurrent ? \"Add\" : \"Remove\"}\n                    color={verbCheck ? \"green\" : !isCurrent ? \"steelblue\" : \"grey\"}\n                    onClick={verbCheck && !isCurrent ? null : () => onClick(isCurrent) } />\n            \n        </div>\n    )\n}\n\nexport default Verb","import React from 'react'\nimport Verb from './Verb'\n\nconst Verbs = ({ verbs, filterString, setVerbFlashcards, verbFlashcards }) => {\n    const filterResult = verbs.filter(verb => verb.verb.match(filterString))\n    const isCurrent = false\n    return (\n        <div>\n            {filterResult.map((verb) => (\n                <Verb key={verb.verbId} verb={verb} verbFlashcards={verbFlashcards} setVerbFlashcards={setVerbFlashcards} isCurrent={isCurrent} />\n            ))}\n\n        </div>\n    )\n\n\n}\n\nVerbs.defaultProps = {\n    filterString: ''\n}\n\n\nexport default Verbs\n","import React from 'react'\nimport Verb from './Verb'\n\nconst CurrentVerbs = ({ setVerbFlashcards, verbFlashcards }) => {\nconst isCurrent = true\n    return (\n        <div>\n            {verbFlashcards.map((verb) => (\n                <Verb key={verb.verbId} verb={verb}verbFlashcards={verbFlashcards} setVerbFlashcards={setVerbFlashcards} isCurrent={isCurrent} />\n            ))}\n\n        </div>\n    )\n\n\n}\n\nexport default CurrentVerbs\n","import React from 'react'\nimport Verbs from './Verbs'\nimport CurrentVerbs from './CurrentVerbs'\nimport { useState } from 'react'\nimport Button from '../Button'\n\nconst AddVerbs = ({ updateVerbFlashcards, setVerbFlashcards, verbFlashcards, verbs, deckId, deckName, setShowAddVerbs }) => {\nconst[filterString, setFilterString] = useState('');\n\nconst onClick = () => {\n    if(window.confirm('Are you sure? progress for removed verbs will be lost')) {\n        updateVerbFlashcards(deckId)\n        setShowAddVerbs(false)\n    }\n    \n}\n\n    return (\n        <div className=\"container\">\n            <h1>{`Editing deck: ${deckName} `}</h1>\n            <Button text=\"Back\" onClick={() => setShowAddVerbs(false)}/>\n            <h1>Add/Remove Verbs</h1>\n            <h1>{ deckId }</h1>\n            <h3 className=\"verb\"> <input className=\"search-box\" type=\"text\" id=\"myInput\" onChange={(e) => setFilterString(e.target.value.toLowerCase())} value={filterString} placeholder=\"Search for verbs..\"></input></h3>\n            <div className=\"verbs-container\">\n                    <div className=\"add-verbs-container\">\n                        <Verbs verbs={verbs} filterString = {filterString} verbFlashcards={verbFlashcards} setVerbFlashcards={setVerbFlashcards}/>\n                    </div>\n                    <h3>Deck: </h3>\n                    <div className=\"current-verbs-container\">\n                        <CurrentVerbs verbFlashcards={verbFlashcards} setVerbFlashcards={setVerbFlashcards}/>\n                    </div>\n            </div>\n            <Button text=\"Submit\" onClick={onClick} />\n        </div>\n    )\n}\n\nexport default AddVerbs\n","import { useState } from 'react'\nimport AddVerbs from './AddVerbs'\n\nconst AddDeck = ({ deckVerbs, verbs, currentDeck, showAddVerbs, setShowAddVerbs, addDeck, userUrl }) => {\n  const [deckName, setDeckName] = useState('')\n  const [useSubjunctive, setUseSubjunctive] = useState(true)\n  const [useIndicative, setUseIndicative] = useState(true)\n  const [useImperative, setUseImperative] = useState(true)\n  const [useParticiple, setUseParticiple] = useState(true)\n  const [usePreterite, setUsePreterite] = useState(true)\n  const [useImperfect, setUseImperfect] = useState(true)\n  const [useFuture, setUseFuture] = useState(true)\n  const [usePresent, setUsePresent] = useState(true)\n  const [isDefault, setIsDefault] = useState(false);\n\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n\n    if (!deckName) {\n      alert('Please add a deck name')\n      return\n    }\n    const userId = userUrl\n    addDeck({ deckName, userId, useSubjunctive, useIndicative, useImperative, useParticiple, usePreterite, useImperfect, useFuture, usePresent, isDefault })\n    setDeckName('')\n    \n\n  }\n\n    return (<>\n    {showAddVerbs && <AddVerbs deckId={currentDeck.deckId} verbs={verbs} deckVerbs={deckVerbs} deckName={currentDeck.deckName} setShowAddVerbs={setShowAddVerbs} />}\n    {!showAddVerbs && \n    <>\n      <form className='add-form' onSubmit={onSubmit}>\n        <div className='form-control'>\n          <label>Deck name</label>\n          <input\n            type='text'\n            placeholder='My first deck'\n            value={deckName}\n            onChange={(e) => setDeckName(e.target.value)}\n          />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Subjunctive:</label>\n        <input\n          type='checkbox'\n          checked={useSubjunctive}\n          value={useSubjunctive}\n          onChange={(e) => setUseSubjunctive(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Indicative:</label>\n        <input\n          type='checkbox'\n          checked={useIndicative}\n          value={useIndicative}\n          onChange={(e) => setUseIndicative(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Imperative:</label>\n        <input\n          type='checkbox'\n          checked={useImperative}\n          value={useImperative}\n          onChange={(e) => setUseImperative(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Participle:</label>\n        <input\n          type='checkbox'\n          checked={useParticiple}\n          value={useParticiple}\n          onChange={(e) => setUseParticiple(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Preterite:</label>\n        <input\n          type='checkbox'\n          checked={usePreterite}\n          value={usePreterite}\n          onChange={(e) => setUsePreterite(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Imperfect:</label>\n        <input\n          type='checkbox'\n          checked={useImperfect}\n          value={useImperfect}\n          onChange={(e) => setUseImperfect(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Future:</label>\n        <input\n          type='checkbox'\n          checked={useFuture}\n          value={useFuture}\n          onChange={(e) => setUseFuture(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>Present:</label>\n        <input\n          type='checkbox'\n          checked={usePresent}\n          value={usePresent}\n          onChange={(e) => setUsePresent(e.currentTarget.checked)}\n        />\n      </div>\n      <div className='form-control form-control-check'>\n        <label>set as Default:</label>\n        <input\n          type='checkbox'\n          checked={isDefault}\n          value={isDefault}\n          onChange={(e) => setIsDefault(e.currentTarget.checked)}\n        />\n      </div>\n      \n\n      <input type='submit' value='Save Deck' className='btn btn-block' />\n    </form>\n    </>}\n    </>\n  )\n}\n\nexport default AddDeck","const Flashcard = ({ flashcard, showVerb }) => {\n    return (\n        <div>\n            <h1>{flashcard.phrase}</h1>\n            {showVerb && <h2>{flashcard.verb}</h2>}\n        </div>\n    )\n}\n\nexport default Flashcard\n","import React from 'react'\nimport Flashcard from './Flashcard'\nimport Button from './Button'\nimport { useState, useEffect } from 'react'\n\nconst Flashcards = ({ isFinished, setIsFinished, hideFlashcards, currentDeck }) => {\n    const [showVerb, setShowVerb] = useState(false)\n    const [flashcard, setFlashcard] = useState([])\n    const [todaysCards, setTodaysCards] = useState([])\n    const [flashcardNumber, setFlashcardNumber] = useState(0)\n    const deckId = currentDeck.deckId\n\n    useEffect(() => {\n        const fetchTodaysFlashcards = async (cardPhase, cutoff = null) => {\n\n            const getDueDateParameter = (cutoff = null) => {\n                if (cutoff) {\n                    const dueDateString = `&dueDate=${cutoff}`\n                    return dueDateString\n                }\n                else {\n                    return ``\n                }\n            }\n\n            const getMaxCardsParameter = (cardPhase) => {\n                if (cardPhase === \"New\") {\n                    const maxCardsString = `&maxCards=20`\n                    return maxCardsString\n                }\n                else {\n                    const maxCardsString = `&maxCards=200`\n                    return maxCardsString\n                }\n            }\n            const dueDate = getDueDateParameter(cutoff)\n            const maxCards = getMaxCardsParameter(cardPhase)\n            const url = `https://localhost:44386/api/Vocabulazy/verbFlashcards?deckId=${deckId}&phase=${cardPhase}` + dueDate + maxCards\n            const res = await fetch(url)\n            const data = await res.json()\n            return data\n        }\n\n        const getTodaysCards = async () => {\n\n            const reviewCardsFromServer = await fetchTodaysFlashcards(\"Graduated\", getCutoff(\"Graduated\", 4))\n            const learningCardsFromServer = await fetchTodaysFlashcards(\"Learning\", getCutoff(\"Learning\", 20))\n            const getNewCards = async (existReviewCard) => {\n                if (existReviewCard) {\n\n                    const newCardsFromServer = await fetchTodaysFlashcards(\"New\", getCutoff(\"New\", 20))\n                    return newCardsFromServer\n                }\n                else {\n                    const newCardsFromServer = await fetchTodaysFlashcards(\"New\")\n                    return newCardsFromServer\n                }\n            }\n\n            const newCardsFromServer = await getNewCards(reviewCardsFromServer.length > 0)\n            const todaysCardsFromServer = [...reviewCardsFromServer, ...learningCardsFromServer, ...newCardsFromServer]\n\n            setTodaysCards(todaysCardsFromServer)\n        }\n        getTodaysCards(deckId)\n    }\n        , [deckId])\n\n    useEffect(() => {\n        if (todaysCards.length > 0) {\n\n            const getFlashcard = async (verbFlashcard) => {\n                const phraseFromServer = await fetchPhrase(verbFlashcard.verbId)\n                const flashcard = Object.assign({}, verbFlashcard)\n                if (phraseFromServer == null) {\n                    flashcard.phrase = flashcard.verb\n                    flashcard.phraseId = null\n                }\n                else {\n                    flashcard.phrase = phraseFromServer.phrase\n                    flashcard.phraseId = phraseFromServer.phraseId\n                }\n\n                setFlashcard(flashcard)\n            }\n            getFlashcard(todaysCards[flashcardNumber])\n\n        }\n    }, [todaysCards, flashcardNumber])\n\n    const getCutoff = (phase, customTime) => {\n        const currentTime = new Date()\n        if (phase === \"New\") {\n            const learningCutoff = (new Date(currentTime.setMinutes(currentTime.getMinutes() + customTime))).toJSON()\n            return learningCutoff\n        }\n        if (phase === \"Learning\") {\n            const newCutoff = (new Date(currentTime.setMinutes(currentTime.getMinutes() + customTime))).toJSON()\n            return newCutoff\n        }\n        if (phase === \"Graduated\") {\n            const setHours = new Date(currentTime.setHours(customTime))\n            const setMinutes = new Date(setHours.setMinutes(0))\n            return (new Date(setMinutes)).toJSON()\n        }\n    }\n\n    const fetchPhrase = async (verbId) => {\n        const url = `https://localhost:44386/api/Vocabulazy/phrases?verbId=${verbId}`\n        const res = await fetch(url)\n        const data = await res.json()\n        const phrase = data[Math.floor(Math.random() * data.length)];\n\n        return phrase\n    }\n\n    const onClickAgain = async () => {\n\n\n        if (flashcard.phase === \"Graduated\") {\n            const newEase = flashcard.ease - 20\n            const newDueDate = getNewDueDate(10)\n            const updateData = { learningStep: 10, interval: 1 * 24 * 60, phase: \"Learning\", ease: newEase, dueDate: newDueDate }\n\n            const updatedCard = await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            todaysCards.push(updatedCard)\n\n            await onClick()\n\n        }\n        else {\n\n            const newDueDate = getNewDueDate(1)\n            const updateData = { learningStep: 1, dueDate: newDueDate }\n            if (flashcard.phase === \"New\") {\n                updateData.phase = \"Learning\"\n            }\n\n            const updatedCard = await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            todaysCards.push(updatedCard)\n            await onClick()\n        }\n    }\n\n    const onClickHard = async () => {\n        if (flashcard.phase === \"Graduated\") {\n            const newInterval = flashcard.interval * 1.2\n            const newEase = flashcard.ease - 15\n            const newDueDate = getNewDueDate(newInterval)\n            const updateData = { interval: newInterval, ease: newEase, dueDate: newDueDate }\n\n            await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            await onClick()\n        }\n    }\n\n    const onClickGood = async () => {\n        if (flashcard.phase === \"Graduated\") {\n            const newInterval = flashcard.interval * flashcard.ease\n            const newDueDate = getNewDueDate(newInterval)\n            const updateData = { interval: newInterval, dueDate: newDueDate }\n\n            await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            await onClick()\n        }\n\n        else {\n            if (flashcard.learningStep === 1) {\n\n                const newLearningStep = 10\n                const newInterval = 10\n                const newDueDate = getNewDueDate(10)\n                const newPhase = \"Learning\"\n                const updateData = { phase: newPhase, learningStep: newLearningStep, interval: newInterval, dueDate: newDueDate }\n\n                const updatedCard = await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n                todaysCards.push(updatedCard)\n\n                await onClick()\n            }\n\n            if ((flashcard.learningStep === 10)) {\n                const newPhase = \"Graduated\"\n                const newInterval = 1 * 24 * 60\n                const newDueDate = getNewDueDate(newInterval)\n                const updateData = { learningStep: null, interval: newInterval, phase: newPhase, dueDate: newDueDate }\n\n                await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n                await onClick()\n\n            }\n        }\n        onClick()\n    }\n\n    const onClickEasy = async () => {\n        if (flashcard.phase === \"Graduated\") {\n            const newEase = flashcard.ease + 15\n            const newInterval = flashcard.interval * flashcard.ease * 1.3\n            const newDueDate = getNewDueDate(newInterval)\n            const updateData = { interval: newInterval, ease: newEase, dueDate: newDueDate }\n\n            await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            await onClick()\n\n        }\n        else {\n\n            const newPhase = \"Graduated\"\n            const newInterval = 4 * 24 * 60\n            const newDueDate = getNewDueDate(newInterval)\n\n            const updateData = { learningStep: null, interval: newInterval, phase: newPhase, dueDate: newDueDate }\n\n            await updateVerbFlashcard(flashcard.verbFlashcardId, updateData)\n            await onClick()\n\n        }\n\n\n\n\n    }\n\n    const onClick = async () => {\n        if (todaysCards.length > 0 && flashcardNumber + 1 !== todaysCards.length) {\n            setShowVerb(false)\n            setFlashcardNumber(flashcardNumber + 1)\n        }\n        else {\n            setShowVerb(false)\n            setIsFinished(true)\n            setFlashcard([])\n            setTodaysCards([])\n        }\n    }\n\n    const onClickQuit = async () => {\n        setShowVerb(false)\n        setIsFinished(true)\n        setFlashcard([])\n        setTodaysCards([])\n        hideFlashcards()\n\n\n    }\n\n\n    const getNewDueDate = (interval) => {\n        const currentTime = new Date()\n        const dueDate = (new Date(currentTime.setMinutes(currentTime.getMinutes() + interval))).toJSON()\n        return dueDate;\n    }\n\n    const updateVerbFlashcard = async (verbFlashcardId, updateData) => {\n\n        const patchData = []\n\n        for (const [key, value] of Object.entries(updateData)) {\n            patchData.push({ \"op\": \"replace\", \"path\": \"/\" + key, \"value\": value })\n\n        }\n\n        const res = await fetch(`https://localhost:44386/api/Vocabulazy/verbflashcards/${verbFlashcardId}`, {\n            method: 'PATCH',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(patchData)\n\n        })\n        const updatedCard = await res.json()\n        return updatedCard\n    }\n\n    return (\n        <>\n            {!isFinished && todaysCards.length === 0 && <div>\n                <h1>No cards left for today, come back tomorrow</h1>\n                <Button text=\"Close\" onClick={hideFlashcards} />\n            </div>}\n\n            {!isFinished && flashcard && todaysCards.length > 0 &&\n                <div>\n                    {<Flashcard key={flashcard.verbId} flashcard={flashcard} showVerb={showVerb} />}\n                    {!showVerb && <Button text=\"Show\" onClick={() => setShowVerb(true)} />}\n                    {showVerb &&\n                        <div>\n                            <Button text=\"Again\" onClick={() => onClickAgain()} />\n                            {flashcard.phase === \"Graduated\" && <Button text=\"Hard\" onClick={() => onClickHard()} />}\n                            <Button text=\"Good\" onClick={() => onClickGood()} />\n                            <Button text=\"Easy\" onClick={() => onClickEasy()} />\n                        </div>}\n                    {<Button text=\"Quit\" onClick={() => onClickQuit()} />}\n                </div>}\n            {isFinished &&\n                <div>\n                    <h1>Deck finished!</h1>\n                    <h2>Come back tomorrow for more flashcards</h2>\n                    <Button text=\"Close\" onClick={hideFlashcards} />\n                </div>}\n        </>\n    )\n}\n\nexport default Flashcards\n","import { useState, useEffect } from 'react'\nimport Header from './components/Header'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Welcome from './components/Welcome'\nimport Navbar from './components/Navbar/Navbar'\nimport Decks from './components/Decks/Decks';\nimport Deck from './components/Decks/Deck';\nimport AddVerbs from './components/Decks/AddVerbs'\nimport Button from './components/Button'\nimport AddDeck from './components/Decks/AddDeck'\nimport Flashcards from './components/Flashcards'\n\nfunction App() {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n  const [toggleNavMenu, setToggleNavMenu] = useState(false);\n  const [showAddVerbs, setShowAddVerbs] = useState(false)\n  const [showAddDeck, setShowAddDeck] = useState(false)\n  const [showChangeDeck, setShowChangeDeck] = useState(false)\n  const [userUrl, setUserUrl] = useState(null);\n  const [decks, setDecks] = useState([]);\n  const [currentDeck, setCurrentDeck] = useState([]);\n  const [verbs, setVerbs] = useState([]);\n  const [verbFlashcards, setVerbFlashcards] = useState([])\n  const [showFlashcards, setShowFlashcards] = useState(false)\n  const [isFinished, setIsFinished] = useState(false)\n\n  useEffect(() => {\n    if (!isLoading & isAuthenticated) {\n      const getUserUrl = async () => {\n        const userUrlFromServer = await user.sub\n        setUserUrl(userUrlFromServer)\n      }\n      getUserUrl()\n    }\n  }, [isAuthenticated, isLoading, user]\n  )\n\n  useEffect(() => {\n    if (userUrl) {\n      const getDecks = async () => {\n        const DecksFromServer = await fetchDecks(userUrl)\n        setDecks(DecksFromServer)\n        setCurrentDeck(DecksFromServer.sort((a, b) => b.isDefault - a.isDefault)[0])\n      }\n\n      getDecks()\n    }\n  }, [userUrl]\n  )\n\n  useEffect(() => {\n    const getVerbs = async () => {\n      const VerbsFromServer = await fetchVerbs()\n      setVerbs(VerbsFromServer)\n    }\n\n    getVerbs()\n  }, [])\n\n// Get verb flashcards for the current selected deck\n  useEffect(() => {\n    if (currentDeck && currentDeck.deckId) {\n      const getVerbFlashcards = async () => {\n        const verbFlashcardsFromServer = await fetchVerbFlashcards(currentDeck.deckId)\n        if (verbFlashcardsFromServer == null) {\n          setVerbFlashcards([])\n        }\n        else {\n          setVerbFlashcards(verbFlashcardsFromServer)\n        }\n      }\n\n      getVerbFlashcards()\n    }\n  }, [currentDeck, isFinished])\n\n\n\n\n  //google-oauth2|109641767784145272988\n  // fetch decks\n  const fetchDecks = async (userUrl) => {\n    const url = `https://localhost:44386/api/Vocabulazy/decks?userId=${userUrl}`\n    const res = await fetch(url)\n    const data = await res.json()\n    return data\n  }\n\n  //fetch verbs\n  const fetchVerbs = async () => {\n    const url = `https://localhost:44386/api/Vocabulazy/verbs`\n    const res = await fetch(url)\n    const data = await res.json()\n    return data\n  }\n  // fetch verb flashcards\n  const fetchVerbFlashcards = async (deckId) => {\n    const url = `https://localhost:44386/api/Vocabulazy/verbFlashcards?deckId=${deckId}`\n    const res = await fetch(url)\n    const data = await res.json()\n    return data\n  }\n\n\n\n\n  //add deck\n  const addDeck = async (deck) => {\n    const res = await fetch('https://localhost:44386/api/Vocabulazy/decks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(deck)\n    })\n\n    const data = await res.json()\n    setDecks([...decks, data])\n    setCurrentDeck(data)\n    setVerbFlashcards([])\n    alert(`Deck ${data.deckName} created! now add some verbs.`)\n    setShowAddVerbs(true)\n    setShowAddDeck(false)\n\n  }\n\n  const addVerbFlashcard = async (verbFlashcard) => {\n    await fetch('https://localhost:44386/api/Vocabulazy/verbFlashcards', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(verbFlashcard)\n\n    })\n\n  };\n\n  const deleteVerbFlashcard = async (verb) => {\n    await fetch(`https://localhost:44386/api/Vocabulazy/verbFlashcards/${verb.verbFlashcardId}`, {\n      method: 'DELETE',\n    })\n  };\n\n\n  const updateVerbFlashcards = async (deckId) => {\n    const verbFlashcardsFromServer = await fetchVerbFlashcards(deckId)\n    const verbsToAdd = verbFlashcards.filter((verb) => !verbFlashcardsFromServer.some(x => x.verbId === verb.verbId))\n    const verbsToRemove = verbFlashcardsFromServer.filter((verb) => !verbFlashcards.some(x => x.verbId === verb.verbId))\n\n    verbsToAdd.forEach(verb => {\n      const newVerbFlashcard = { verbId: verb.verbId, deckId: deckId }\n      addVerbFlashcard(newVerbFlashcard)\n    })\n    verbsToRemove.forEach(verb => {\n      deleteVerbFlashcard(verb)\n    })\n  }\n\n\n  return (\n    <>\n      <Navbar onToggleNavMenu={() => setToggleNavMenu(!toggleNavMenu)} toggleNavMenu={toggleNavMenu} />\n      <div className=\"container\">\n        {!isLoading && <Header title=\"Welcome to Vocabulazy!\" isAuthenticated={isAuthenticated} user={user} />}\n        {!isLoading && <Welcome isAuthenticated={isAuthenticated} />}\n        <div>\n          {isAuthenticated && !showAddDeck && currentDeck && <Button text={showChangeDeck ? \"Hide\" : \"Change Deck\"} color={showChangeDeck ? \"steelblue\" : \"blueviolet\"} onClick={() => setShowChangeDeck(!showChangeDeck)} />}\n          {isAuthenticated && !showChangeDeck && <Button text={showAddDeck ? \"Back\" : \"Create new Deck\"} color={showAddDeck ? \"steelblue\" : \"blueviolet\"} onClick={() => setShowAddDeck(!showAddDeck)} />}\n          {showAddDeck && <AddDeck addDeck={addDeck} userUrl={userUrl} />}\n        </div>\n        {!currentDeck && isAuthenticated && !isLoading && !showAddDeck ? <h1>No decks yet, create one to get started!</h1> : null}\n        {currentDeck && showChangeDeck && <Decks decks={decks} isLoading={isLoading} isAuthenticated={isAuthenticated} setCurrentDeck={setCurrentDeck} currentDeck={currentDeck} />}\n        {isAuthenticated && currentDeck && !showAddVerbs && <Deck showFlashcards={() => setShowFlashcards(true)} deck={currentDeck} setCurrentDeck={setCurrentDeck} verbs={verbs} verbFlashcards={verbFlashcards} showAddVerbs={showAddVerbs} setShowAddVerbs={setShowAddVerbs} />}\n        {verbFlashcards && showAddVerbs && <AddVerbs updateVerbFlashcards={updateVerbFlashcards} verbs={verbs} verbFlashcards={verbFlashcards} setVerbFlashcards={setVerbFlashcards} deckId={currentDeck.deckId} deckName={currentDeck.deckName} setShowAddVerbs={setShowAddVerbs} />}\n        {verbFlashcards && showFlashcards && <Flashcards isFinished = {isFinished} setIsFinished={setIsFinished} hideFlashcards={() => setShowFlashcards(false)} verbFlashcards={verbFlashcards} fetchVerbFlashcards={fetchVerbFlashcards} currentDeck={currentDeck} setVerbFlashcards={setVerbFlashcards} />}\n\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from \"@auth0/auth0-react\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Auth0Provider\n    domain=\"dev-hduvcad5.eu.auth0.com\"\n    clientId=\"ydn3VofQC2OxQqkk52ILkJADCWvT3PoA\"\n    redirectUri={window.location.origin}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}